{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Frequenz Electricity Trading API","text":""},{"location":"#introduction","title":"Introduction","text":"<p>Specification for Electricity Trading API.</p>"},{"location":"#overview","title":"Overview","text":"<p>The Frequenz API offers a robust set of operations for managing electricity trading orders within Gridpools. A Gridpool is an aggregation of multiple microgrids into a virtual power pool, designed to ensure the balancing of electricity supply and demand in real time.</p>"},{"location":"#objective","title":"Objective","text":"<p>The primary aim of this API is to streamline the process of electricity trading within balancing groups. A balancing group is a network configuration that includes multiple electricity producers and consumers. Grid stability relies on maintaining a balance between supply and demand within these groups. Participants causing imbalances can face financial penalties. Using this API, individual participants can trade electricity efficiently, ensuring they meet both their operational needs and financial objectives, while also contributing to the overall grid stability.</p>"},{"location":"#key-features","title":"Key Features","text":"<ul> <li>Order Placement: Facilitates the creation, modification, and deletion of trading orders.</li> <li>Real-Time Matching: Enables real-time order matching within the Gridpool.</li> <li>Order Tracking: Allows users to track the status of their orders, providing transparency and control.</li> <li>Public Order Book: Provides access to a list of public orders for market visibility and analysis.</li> </ul>"},{"location":"#target-audience","title":"Target Audience","text":"<p>This API is primarily designed for application developers in the energy sector who focus on electricity trading, grid management, and related services. While the API covers complex energy market operations, its design aims to be as developer-friendly as possible, requiring no specialized knowledge in energy systems.</p>"},{"location":"#contributing","title":"Contributing","text":"<p>If you want to know how to build this project and contribute to it, please check out the Contributing Guide.</p>"},{"location":"CONTRIBUTING/","title":"Contributing to Frequenz Electricity Trading API","text":""},{"location":"CONTRIBUTING/#build","title":"Build","text":"<p>You can use <code>build</code> to simply build the source and binary distribution:</p> <pre><code>python -m pip install build\npython -m build\n</code></pre>"},{"location":"CONTRIBUTING/#local-development","title":"Local development","text":"<p>You need to make sure you have the <code>git submodules</code> updated:</p> <pre><code>git submodule update --init\n</code></pre>"},{"location":"CONTRIBUTING/#running-protolint","title":"Running protolint","text":"<p>To make sure some common mistakes are avoided and to ensure a consistent style it is recommended to run <code>protolint</code>. After you installed <code>protolint</code>, just run:</p> <pre><code>protolint lint proto\n</code></pre>"},{"location":"CONTRIBUTING/#python-setup","title":"Python setup","text":"<p>You can use editable installs to develop the project locally (it will install all the dependencies too):</p> <pre><code>python -m pip install -e .\n</code></pre> <p>This will also generate the Python files from the <code>proto/</code> files and leave them in <code>py/</code>, so you can inspect them.</p> <p>Or you can install all development dependencies (<code>mypy</code>, <code>pylint</code>, <code>pytest</code>, etc.) in one go too: <pre><code>python -m pip install -e .[dev]\n</code></pre></p> <p>If you don't want to install all the dependencies, you can also use <code>nox</code> to run the tests and other checks creating its own virtual environments:</p> <pre><code>python -m pip install .[dev-noxfile]\nnox\n</code></pre> <p>You can also use <code>nox -R</code> to reuse the current testing environment to speed up test at the expense of a higher chance to end up with a dirty test environment.</p>"},{"location":"CONTRIBUTING/#upgrading-dependencies","title":"Upgrading dependencies","text":"<p>If you want to update the dependency <code>frequenz-api-common</code>, then you need to:</p> <ol> <li>Update the submodule <code>frequenz-api-common</code></li> <li>Update the version of the <code>frequenz-api-common</code> package in <code>pyproject.toml</code></li> </ol> <p>The version of <code>frequenz-api-common</code> used in both places mentioned above should be the same.</p> <p>Here is an example of upgrading the <code>frequenz-api-common</code> dependency to version <code>v0.2.0</code>: <pre><code>ver=\"0.2.0\"\ncd submodules/frequenz-api-common\ngit remote update\ngit checkout v${ver}\ncd -\n\nsed s/\"frequenz-api-common == [0-9]\\.[0-9]\\.[0-9]\"/\"frequenz-api-common == ${ver}\"/g -i pyproject.toml\n</code></pre></p>"},{"location":"CONTRIBUTING/#running-tests-checks-individually","title":"Running tests / checks individually","text":"<p>For a better development test cycle you can install the runtime and test dependencies and run <code>pytest</code> manually.</p> <pre><code>python -m pip install .[dev-pytest]  # included in .[dev] too\n# And for example\npytest tests/test_*.py\n</code></pre> <p>Or you can use <code>nox</code>:</p> <pre><code>nox -R -s pytest -- test/test_*.py\n</code></pre> <p>The same appliest to <code>pylint</code> or <code>mypy</code> for example:</p> <pre><code>nox -R -s pylint -- test/test_*.py\nnox -R -s mypy -- test/test_*.py\n</code></pre>"},{"location":"CONTRIBUTING/#building-the-documentation","title":"Building the documentation","text":"<p>To build the documentation, first install the dependencies (if you didn't install all <code>dev</code> dependencies):</p> <pre><code>python -m pip install -e .[dev-mkdocs]\n</code></pre> <p>Then you can build the documentation (it will be written in the <code>site/</code> directory):</p> <pre><code>mkdocs build\n</code></pre> <p>Or you can just serve the documentation without building it using:</p> <pre><code>mkdocs serve\n</code></pre> <p>Your site will be updated live when you change your files (provided that you used <code>pip install -e .</code>, beware of a common pitfall of using <code>pip install</code> without <code>-e</code>, in that case the API reference won't change unless you do a new <code>pip install</code>).</p> <p>To build multi-version documentation, we use mike. If you want to see how the multi-version sites looks like locally, you can use:</p> <pre><code>mike deploy my-version\nmike set-default my-version\nmike serve\n</code></pre> <p><code>mike</code> works in mysterious ways. Some basic information:</p> <ul> <li><code>mike deploy</code> will do a <code>mike build</code> and write the results to your local <code>gh-pages</code> branch. <code>my-version</code> is an arbitrary name for the local version   you want to preview.</li> <li><code>mike set-default</code> is needed so when you serve the documentation, it goes to   your newly produced documentation by default.</li> <li><code>mike serve</code> will serve the contents of your local <code>gh-pages</code> branch. Be   aware that, unlike <code>mkdocs serve</code>, changes to the sources won't be shown   live, as the <code>mike deploy</code> step is needed to refresh them.</li> </ul> <p>Be careful not to use <code>--push</code> with <code>mike deploy</code>, otherwise it will push your local <code>gh-pages</code> branch to the <code>origin</code> remote.</p> <p>That said, if you want to test the actual website in your fork, you can always use <code>mike deploy --push --remote your-fork-remote</code>, and then access the GitHub pages produced for your fork.</p>"},{"location":"CONTRIBUTING/#releasing","title":"Releasing","text":"<p>These are the steps to create a new release:</p> <ol> <li> <p>Get the latest head you want to create a release from.</p> </li> <li> <p>Update the <code>RELEASE_NOTES.md</code> file if it is not complete, up to date, and    remove template comments (<code>&lt;!-- ... -&gt;</code>) and empty sections. Submit a pull    request if an update is needed, wait until it is merged, and update the    latest head you want to create a release from to get the new merged pull    request.</p> </li> <li> <p>Create a new signed tag using the release notes and    a semver compatible version number with a <code>v</code> prefix,    for example:</p> </li> </ol> <pre><code>git tag -s --cleanup=whitespace -F RELEASE_NOTES.md v0.0.1\n</code></pre> <ol> <li> <p>Push the new tag.</p> </li> <li> <p>A GitHub action will test the tag and if all goes well it will create    a GitHub    Release,    and upload a new package to    PyPI    automatically.</p> </li> <li> <p>Once this is done, reset the <code>RELEASE_NOTES.md</code> with the template:</p> </li> </ol> <pre><code>cp .github/RELEASE_NOTES.template.md RELEASE_NOTES.md\n</code></pre> <p>Commit the new release notes and create a PR (this step should be automated    eventually too).</p> <ol> <li>Celebrate!</li> </ol>"},{"location":"CONTRIBUTING/#cross-arch-testing","title":"Cross-Arch Testing","text":"<p>This project has built-in support for testing across multiple architectures. Currently, our CI conducts tests on <code>arm64</code> machines using QEMU emulation. We also have the flexibility to expand this support to include additional architectures in the future.</p> <p>This project contains Dockerfiles that can be used in the CI to test the python package in non-native machine architectures, e.g., <code>arm64</code>. The Dockerfiles exist in the directory <code>.github/containers/nox-cross-arch</code>, and follow a naming scheme so that they can be easily used in build matrices in the CI, in <code>nox-cross-arch</code> job. The naming scheme is:</p> <pre><code>&lt;arch&gt;-&lt;os&gt;-python-&lt;python-version&gt;.Dockerfile\n</code></pre> <p>E.g.,</p> <pre><code>arm64-ubuntu-20.04-python-3.11.Dockerfile\n</code></pre> <p>If a Dockerfile for your desired target architecture, OS, and python version does not exist here, please add one before proceeding to add your options to the test matrix.</p>"},{"location":"SUMMARY/","title":"SUMMARY","text":"<ul> <li>Home</li> <li>Protobuf API Reference</li> <li>Python API Reference</li> <li>Contributing</li> </ul>"},{"location":"protobuf-reference/SUMMARY/","title":"SUMMARY","text":"<ul> <li>frequenz<ul> <li>api<ul> <li>electricity_trading<ul> <li>v1<ul> <li>electricity_trading.proto</li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"protobuf-reference/frequenz/api/electricity_trading/v1/electricity_trading/","title":"Protocol Documentation","text":""},{"location":"protobuf-reference/frequenz/api/electricity_trading/v1/electricity_trading/#table-of-contents","title":"Table of Contents","text":"<ul> <li> <p>frequenz/api/electricity_trading/v1/electricity_trading.proto</p> <ul> <li>CancelAllGridpoolOrdersRequest</li> <li>CancelAllGridpoolOrdersResponse</li> <li>CancelGridpoolOrderRequest</li> <li>CancelGridpoolOrderResponse</li> <li>CreateGridpoolOrderRequest</li> <li>CreateGridpoolOrderResponse</li> <li>GetGridpoolOrderRequest</li> <li>GetGridpoolOrderResponse</li> <li>GridpoolOrderFilter</li> <li>ListGridpoolOrdersRequest</li> <li>ListGridpoolOrdersResponse</li> <li>ListPublicOrdersRequest</li> <li>ListPublicOrdersResponse</li> <li>Order</li> <li>OrderDetail</li> <li>OrderDetail.StateDetail</li> <li>PublicOrder</li> <li>PublicOrderFilter</li> <li>ReceiveGridpoolOrdersStreamRequest</li> <li>ReceiveGridpoolOrdersStreamResponse</li> <li>ReceivePublicOrdersStreamRequest</li> <li>ReceivePublicOrdersStreamResponse</li> <li>UpdateGridpoolOrderRequest</li> <li>UpdateGridpoolOrderRequest.UpdateOrder</li> <li> <p>UpdateGridpoolOrderResponse</p> </li> <li> <p>MarketSide</p> </li> <li>OrderDetail.StateDetail.MarketActor</li> <li>OrderDetail.StateDetail.StateReason</li> <li>OrderExecutionOption</li> <li>OrderState</li> <li> <p>OrderType</p> </li> <li> <p>ElectricityTradingService</p> </li> </ul> </li> <li> <p>Scalar Value Types</p> </li> </ul> <p></p> <p>Top</p>"},{"location":"protobuf-reference/frequenz/api/electricity_trading/v1/electricity_trading/#frequenzapielectricity_tradingv1electricity_tradingproto","title":"frequenz/api/electricity_trading/v1/electricity_trading.proto","text":""},{"location":"protobuf-reference/frequenz/api/electricity_trading/v1/electricity_trading/#cancelallgridpoolordersrequest","title":"CancelAllGridpoolOrdersRequest","text":"<p>Request to cancel all currently open orders for a given Gridpool.</p> Field Type Label Description gridpool_id uint64 ID of the gridpool containing the orders to be cancelled. <p></p>"},{"location":"protobuf-reference/frequenz/api/electricity_trading/v1/electricity_trading/#cancelallgridpoolordersresponse","title":"CancelAllGridpoolOrdersResponse","text":"<p>Response to canceling all currently open orders for a given Gridpool.</p> Field Type Label Description gridpool_id uint64 ID of the gridpool to cancel the orders for. <p></p>"},{"location":"protobuf-reference/frequenz/api/electricity_trading/v1/electricity_trading/#cancelgridpoolorderrequest","title":"CancelGridpoolOrderRequest","text":"<p>Request to cancel an existing order for a given Gridpool.</p> Field Type Label Description gridpool_id uint64 ID of the gridpool the order belongs to. order_id uint64 ID of the order to be cancelled. <p></p>"},{"location":"protobuf-reference/frequenz/api/electricity_trading/v1/electricity_trading/#cancelgridpoolorderresponse","title":"CancelGridpoolOrderResponse","text":"<p>Response from canceling an existing order for a given Gridpool.</p> Field Type Label Description gridpool_id uint64 ID of the gridpool the order belongs to. order_detail OrderDetail Details of the cancelled order. <p></p>"},{"location":"protobuf-reference/frequenz/api/electricity_trading/v1/electricity_trading/#creategridpoolorderrequest","title":"CreateGridpoolOrderRequest","text":"<p>Represents a request to create a new order for a specific Gridpool.</p> <p>A Gridpool is a collection of microgrids that can span multiple delivery areas. It's important to note that when submitting an order for a Gridpool, you must group microgrids by their respective delivery areas. This means you should submit separate orders for each delivery area within the Gridpool. Failing to do so could lead to inaccuracies in the bidding process and may not fully represent the capabilities or constraints of the microgrids in different delivery areas. However, in most countries only one delivery area exists, exceptions are countries like e.g. Australia, Germany and the US.</p> <p>Caution</p> <p>If a Gridpool contains microgrids in both Delivery Area A and Delivery  Area B, you should submit one order for Delivery Area A and another for  Delivery Area B, specifying the details for each.</p> Field Type Label Description gridpool_id uint64 Unique identifier for the Gridpool to which the bid belongs. order Order The details of the order being placed. <p></p>"},{"location":"protobuf-reference/frequenz/api/electricity_trading/v1/electricity_trading/#creategridpoolorderresponse","title":"CreateGridpoolOrderResponse","text":"<p>Represents the server's response after a new order has been successfully created for a specific Gridpool.</p> <p>This response provides essential details about the newly created order, such as the unique order ID and the state of the order. By receiving this response, users can be sure that their order has been placed successfully for the designated Gridpool.</p> Field Type Label Description gridpool_id uint64 ID of the gridpool the order belongs to. order_detail OrderDetail Details of the newly created order. <p></p>"},{"location":"protobuf-reference/frequenz/api/electricity_trading/v1/electricity_trading/#getgridpoolorderrequest","title":"GetGridpoolOrderRequest","text":"<p>Request to retrieve a single order for a given Gridpool.</p> Field Type Label Description gridpool_id uint64 ID of the gridpool containing the order to be retrieved. order_id uint64 ID of the order to be retrieved. <p></p>"},{"location":"protobuf-reference/frequenz/api/electricity_trading/v1/electricity_trading/#getgridpoolorderresponse","title":"GetGridpoolOrderResponse","text":"<p>Response from requesting order details for a specific order.</p> Field Type Label Description gridpool_id uint64 ID of the gridpool containing the retrieved order. order_detail OrderDetail Details of the retrieved order. <p></p>"},{"location":"protobuf-reference/frequenz/api/electricity_trading/v1/electricity_trading/#gridpoolorderfilter","title":"GridpoolOrderFilter","text":"<p>Parameters for filtering Gridpool orders.</p> <p>Note</p> <p>Multiple filters can be used in combination to narrow down the returned results. For example, you can apply both state and side filters simultaneously to list only the open orders on the buy side of the market.</p> Field Type Label Description states OrderState repeated Optional filter for order state. side MarketSide optional Optional filter for order side. delivery_period frequenz.api.common.v1.grid.DeliveryPeriod optional Optional filter for delivery period. delivery_area frequenz.api.common.v1.grid.DeliveryArea optional Optional filter for delivery area. tag string optional Optional filters the listed orders by their associated tag. <p></p>"},{"location":"protobuf-reference/frequenz/api/electricity_trading/v1/electricity_trading/#listgridpoolordersrequest","title":"ListGridpoolOrdersRequest","text":"<p>Request to retrieve a list of orders for a specific Gridpool.</p> Field Type Label Description gridpool_id uint64 The Gridpool to retrieve the orders for. filter GridpoolOrderFilter Optional Gridpool orders filter. pagination_params frequenz.api.common.v1.pagination.PaginationParams Pagination parameters. <p></p>"},{"location":"protobuf-reference/frequenz/api/electricity_trading/v1/electricity_trading/#listgridpoolordersresponse","title":"ListGridpoolOrdersResponse","text":"<p>Response from listing orders for a given Gridpool.</p> Field Type Label Description order_detail_lists OrderDetail repeated List of all listed orders with their details. pagination_info frequenz.api.common.v1.pagination.PaginationInfo Metadata for pagination, including token for next page to retrieve. <p></p>"},{"location":"protobuf-reference/frequenz/api/electricity_trading/v1/electricity_trading/#listpublicordersrequest","title":"ListPublicOrdersRequest","text":"<p>Request to list all executed public orders with optional filters. This method allows for querying historical data, useful for various analytics tasks.</p> Field Type Label Description filter PublicOrderFilter Optional filter to narrow down the list of public orders. pagination_params frequenz.api.common.v1.pagination.PaginationParams Pagination parameters. <p></p>"},{"location":"protobuf-reference/frequenz/api/electricity_trading/v1/electricity_trading/#listpublicordersresponse","title":"ListPublicOrdersResponse","text":"<p>ListPublicOrdersResponse is a message that contains a list of historic executed public orders. This dataset is vital for tasks such as training machine learning models, backtesting trading strategies, and conducting market analysis.</p> Field Type Label Description public_order_lists PublicOrder repeated List of all public orders that met the specified filtering criteria. pagination_info frequenz.api.common.v1.pagination.PaginationInfo Metadata for pagination, including token for next page to retrieve. <p></p>"},{"location":"protobuf-reference/frequenz/api/electricity_trading/v1/electricity_trading/#order","title":"Order","text":"<p>Represents an order in the electricity market.</p> Field Type Label Description delivery_area frequenz.api.common.v1.grid.DeliveryArea The delivery area where the contract is to be delivered. The representation of the delivery area may vary by jurisdiction. delivery_period frequenz.api.common.v1.grid.DeliveryPeriod The delivery period for the contract, specified as a start and end timestamp in UTC. It represents the period during which the contract is expected to be fulfilled. type OrderType The type of order, such as LIMIT, STOP_LIMIT, ICEBERG etc. This determines how the order is to be executed in the market. side MarketSide Indicates if the order is on the Buy or Sell side of the market. price frequenz.api.common.v1.market.Price The limit price at which the contract is to be traded. This is the maximum price for a BUY order or the minimum price for a SELL order. quantity frequenz.api.common.v1.market.Energy The quantity of the contract being traded, specified in MWh. stop_price frequenz.api.common.v1.market.Price optional Applicable for STOP_LIMIT orders. This is the stop price that triggers the limit order. peak_price_delta frequenz.api.common.v1.market.Price optional Applicable for ICEBERG orders. This is the price difference between the peak price and the limit price. display_quantity frequenz.api.common.v1.market.Energy optional Applicable for ICEBERG orders. This is the quantity of the order to be displayed in the order book. execution_option OrderExecutionOption optional Optional execution options such as All or None, Fill or Kill, etc. valid_until google.protobuf.Timestamp optional Do not use if ExecutionOption is set to FOK or IOC. This is an optional UTC timestamp defining the time after which the order should be cancelled if not filled. payload google.protobuf.Struct optional Optional user-defined payload individual to a specific order. This can be any data that needs to be associated with the order. <p>The field can store e.g. JSON objects containing details involved in the order. This feature can simplify application development by eliminating the need for complicated state management to remember the specifics of each order.</p> <p>By embedding this \"state\" within the order itself, you can include specifics like which microgrids consume or provide how much power. This makes it easier to manage complex orders and can simplify the logic required in applications.</p> <p>Example JSON payload: { \"microgrids\": [ { \"microgrid_id\": \"1\", \"mwh\": 1.0 }, { \"microgrid_id\": \"2\", \"mwh\": 0.5 } ] }</p> <p>In this example, if the order is exectuted, these microgrids might consume the electricity mentioned in the example JSON payload. | | tag | string | optional | Optional user-defined tag to group related orders. |</p> <p></p>"},{"location":"protobuf-reference/frequenz/api/electricity_trading/v1/electricity_trading/#orderdetail","title":"OrderDetail","text":"<p>Represents an order with full details, including its ID, state and associated UTC timestamps.</p> Field Type Label Description order_id uint64 Unique identifier of the order. order Order The details of the order. state_detail OrderDetail.StateDetail Details of the order's current state. open_quantity frequenz.api.common.v1.market.Energy Remaining open quantity for this order. filled_quantity frequenz.api.common.v1.market.Energy Filled quantity for this order. create_time google.protobuf.Timestamp UTC Timestamp when the order was created. modification_time google.protobuf.Timestamp UTC Timestamp of the last update to the order. <p></p>"},{"location":"protobuf-reference/frequenz/api/electricity_trading/v1/electricity_trading/#orderdetailstatedetail","title":"OrderDetail.StateDetail","text":"<p>Inner message providing details about the current state of the order.</p> Field Type Label Description state OrderState Current state of the order. state_reason OrderDetail.StateDetail.StateReason Reason for the current state. market_actor OrderDetail.StateDetail.MarketActor Actor responsible for the current state. <p></p>"},{"location":"protobuf-reference/frequenz/api/electricity_trading/v1/electricity_trading/#publicorder","title":"PublicOrder","text":"<p>Represents a public order in the market.</p> <p>Each PublicOrder within this response message represents an order that was previously active in the public order book, along with its key attributes and final state.</p> Field Type Label Description public_order_id uint64 ID of the order from the public order book. buy_delivery_area frequenz.api.common.v1.grid.DeliveryArea Delivery area code of the buy side. sell_delivery_area frequenz.api.common.v1.grid.DeliveryArea Delivery area code of the sell side. delivery_period frequenz.api.common.v1.grid.DeliveryPeriod The delivery period for the contract. modification_time google.protobuf.Timestamp UTC Timestamp of the last order update or matching. price frequenz.api.common.v1.market.Price The limit price at which the contract is to be traded. quantity frequenz.api.common.v1.market.Energy The quantity of the contract being traded in MWh. state OrderState State of the order. <p></p>"},{"location":"protobuf-reference/frequenz/api/electricity_trading/v1/electricity_trading/#publicorderfilter","title":"PublicOrderFilter","text":"<p>Parameters for filtering the historic, publicly executed orders (trades).</p> Field Type Label Description states OrderState repeated If set, only orders in this state are returned. delivery_period frequenz.api.common.v1.grid.DeliveryPeriod optional If set, only orders with this delivery period are returned. buy_delivery_area frequenz.api.common.v1.grid.DeliveryArea optional If set, only orders in this buy delivery area are returned. sell_delivery_area frequenz.api.common.v1.grid.DeliveryArea optional If set, only orders in this sell delivery area are returned. <p></p>"},{"location":"protobuf-reference/frequenz/api/electricity_trading/v1/electricity_trading/#receivegridpoolordersstreamrequest","title":"ReceiveGridpoolOrdersStreamRequest","text":"<p>Subscribe to Gridpool order stream. This method provides real-time updates on Gridpool orders, making it useful for dynamic analytics and real-time decision-making.</p> Field Type Label Description gridpool_id uint64 The gridpool to retrieve the orders for. filter GridpoolOrderFilter Optional public orders filter. <p>!!! Important Note Regarding \"DeliveryPeriod Filter\" Ensure that the specified DeliveryPeriod is set for a future timeframe. If a past or present period is selected, the stream will automatically close and return no entries. |</p> <p></p>"},{"location":"protobuf-reference/frequenz/api/electricity_trading/v1/electricity_trading/#receivegridpoolordersstreamresponse","title":"ReceiveGridpoolOrdersStreamResponse","text":"<p>Response to a subscription request for a stream of Gridpool orders. Real-time information on gridpool orders is pushed through this response.</p> Field Type Label Description order_detail OrderDetail Order detail response. <p></p>"},{"location":"protobuf-reference/frequenz/api/electricity_trading/v1/electricity_trading/#receivepublicordersstreamrequest","title":"ReceivePublicOrdersStreamRequest","text":"<p>Subscribe to public order stream. This method provides real-time updates on newly executed public orders, making it useful for dynamic analytics and real-time decision-making.</p> Field Type Label Description filter PublicOrderFilter Optional filter to specify which orders should be included in the stream. <p></p>"},{"location":"protobuf-reference/frequenz/api/electricity_trading/v1/electricity_trading/#receivepublicordersstreamresponse","title":"ReceivePublicOrdersStreamResponse","text":"<p>Response to a subscription request for a stream of public orders. Real-time information on public orders is pushed through this response.</p> Field Type Label Description public_order PublicOrder The public order that has been executed and is being broadcasted in real-time. <p></p>"},{"location":"protobuf-reference/frequenz/api/electricity_trading/v1/electricity_trading/#updategridpoolorderrequest","title":"UpdateGridpoolOrderRequest","text":"<p>Request to update an existing order for a given Gridpool.</p> Field Type Label Description gridpool_id uint64 ID of the Gridpool the order belongs to. order_id uint64 The order identifier update_mask google.protobuf.FieldMask Field mask specifying which fields should be updated update_order_fields UpdateGridpoolOrderRequest.UpdateOrder The fields that can be updated <p></p>"},{"location":"protobuf-reference/frequenz/api/electricity_trading/v1/electricity_trading/#updategridpoolorderrequestupdateorder","title":"UpdateGridpoolOrderRequest.UpdateOrder","text":"<p>Represents the order properties that can be updated after an order has been placed. At least one of the optional fields must be set for an update to take place.</p> Field Type Label Description price frequenz.api.common.v1.market.Price optional The updated limit price at which the contract is to be traded. This is the maximum price for a BUY order or the minimum price for a SELL order. quantity frequenz.api.common.v1.market.Energy optional The updated quantity of the contract being traded, specified in MWh. stop_price frequenz.api.common.v1.market.Price optional Applicable for STOP_LIMIT orders. This is the updated stop price that triggers the limit order. peak_price_delta frequenz.api.common.v1.market.Price optional Applicable for ICEBERG orders. This is the updated price difference between the peak price and the limit price. display_quantity frequenz.api.common.v1.market.Energy optional Applicable for ICEBERG orders. This is the updated quantity of the order to be displayed in the order book. execution_option OrderExecutionOption optional Updated execution options such as All or None, Fill or Kill, etc. valid_until google.protobuf.Timestamp This is an updated timestamp defining the time after which the order should be cancelled if not filled. The timestamp is in UTC. payload google.protobuf.Struct Updated user-defined payload individual to a specific order. This can be any data that the user wants to associate with the order. tag string optional Updated user-defined tag to group related orders. <p></p>"},{"location":"protobuf-reference/frequenz/api/electricity_trading/v1/electricity_trading/#updategridpoolorderresponse","title":"UpdateGridpoolOrderResponse","text":"<p>Response from updating an existing order for a given Gridpool.</p> Field Type Label Description gridpool_id uint64 ID of the Gridpool the order belongs to. order_detail OrderDetail Details of the updated order. <p></p>"},{"location":"protobuf-reference/frequenz/api/electricity_trading/v1/electricity_trading/#marketside","title":"MarketSide","text":"<p>Enum for the side of the market that the order is on.</p> Name Number Description MARKET_SIDE_UNSPECIFIED 0 UNSPECIFIED: The side of the market has not been set. MARKET_SIDE_BUY 1 BUY: Order to purchase electricity. This is referred to as a 'bid' in the order book. MARKET_SIDE_SELL 2 SELL: Order to sell electricity. This is referred to as an 'ask' or 'offer' in the order book. <p></p>"},{"location":"protobuf-reference/frequenz/api/electricity_trading/v1/electricity_trading/#orderdetailstatedetailmarketactor","title":"OrderDetail.StateDetail.MarketActor","text":"<p>Enum describing the actor responsible for an order state change.</p> Name Number Description MARKET_ACTOR_UNSPECIFIED 0 MARKET_ACTOR_USER 1 The user was the actor. MARKET_ACTOR_MARKET_OPERATOR 2 The market operator was the actor. MARKET_ACTOR_SYSTEM 3 The system was the actor. <p></p>"},{"location":"protobuf-reference/frequenz/api/electricity_trading/v1/electricity_trading/#orderdetailstatedetailstatereason","title":"OrderDetail.StateDetail.StateReason","text":"<p>Enum describing the action that led to the state change.</p> Name Number Description STATE_REASON_UNSPECIFIED 0 STATE_REASON_ADD 1 The order was added. STATE_REASON_MODIFY 2 The order was modified. STATE_REASON_DELETE 3 The order was deleted. STATE_REASON_DEACTIVATE 4 The order was deactivated. STATE_REASON_REJECT 5 The order was rejected. STATE_REASON_FULL_EXECUTION 6 The order was fully executed. STATE_REASON_PARTIAL_EXECUTION 7 The order was partially executed. STATE_REASON_ICEBERG_SLICE_ADD 8 An iceberg slice was added. STATE_REASON_VALIDATION_FAIL 9 The order failed validation. STATE_REASON_UNKNOWN_STATE 10 The state of the order is unknown. STATE_REASON_QUOTE_ADD 11 A quote was added. STATE_REASON_QUOTE_FULL_EXECUTION 12 A quote was fully executed. STATE_REASON_QUOTE_PARTIAL_EXECUTION 13 A quote was partially executed. <p></p>"},{"location":"protobuf-reference/frequenz/api/electricity_trading/v1/electricity_trading/#orderexecutionoption","title":"OrderExecutionOption","text":"<p>OrderExecutionOption defines specific behavior for the execution of an order. These options provide control on how an order is handled in the market.</p> Name Number Description ORDER_EXECUTION_OPTION_UNSPECIFIED 0 UNSPECIFIED: The order execution option has not been set. ORDER_EXECUTION_OPTION_NONE 1 Order remains open until it's fully fulfilled, cancelled by the client, <code>valid_until</code> timestamp is reached, or the end of the trading session. ORDER_EXECUTION_OPTION_AON 2 All or None: Order must be executed in its entirety, or not executed at all. ORDER_EXECUTION_OPTION_FOK 3 Fill or Kill: Order must be executed immediately in its entirety, or not at all. ORDER_EXECUTION_OPTION_IOC 4 Immediate or Cancel: Any portion of an order that cannot be filled immediately will be cancelled. <p></p>"},{"location":"protobuf-reference/frequenz/api/electricity_trading/v1/electricity_trading/#orderstate","title":"OrderState","text":"<p>Enum for the state of an order.</p> Name Number Description ORDER_STATE_UNSPECIFIED 0 UNSPECIFIED: The order state is not known. This is usually the default state of a newly created order object before any operations have been applied. ORDER_STATE_PENDING 1 PENDING: The order has been sent to the marketplace but has not yet been confirmed. This can be due to awaiting validation or system processing. ORDER_STATE_ACTIVE 2 ACTIVE: The order has been confirmed and is open in the market. It may be unfilled or partially filled. ORDER_STATE_FILLED 3 FILLED: The order has been completely filled and there are no remaining quantities on the order. ORDER_STATE_CANCELED 4 CANCELED: The order has been cancelled. This can occur due to a cancellation request by the market participant, system, or market operator. ORDER_STATE_CANCEL_REQUESTED 5 CANCEL_REQUESTED: A cancellation request for the order has been submitted but the order is not yet removed from the order book. ORDER_STATE_CANCEL_REJECTED 6 CANCEL_REJECTED: The order cancellation request was rejected, likely due to it having already been filled or expired. ORDER_STATE_EXPIRED 7 EXPIRED: The order has not been filled within the defined duration and has expired. ORDER_STATE_FAILED 8 FAILED: The order submission failed and was unable to be placed on the order book, usually due to a validation error or system issue. ORDER_STATE_HIBERNATE 9 HIBERNATE: The order has been entered into the system but is not currently exposed to the market. This could be due to certain conditions not yet being met. ORDER_STATE_RECALL 10 RECALL: The order has been recalled. This could be due to a system issue or a request from the market participant or market operator. <p></p>"},{"location":"protobuf-reference/frequenz/api/electricity_trading/v1/electricity_trading/#ordertype","title":"OrderType","text":"<p>Enum for the order types that can be specified for an order.</p> Name Number Description ORDER_TYPE_UNSPECIFIED 0 UNSPECIFIED: The order type has not been set. ORDER_TYPE_LIMIT 1 LIMIT: Order to buy or sell at a specific price or better. It remains active until it is filled, cancelled, or expired. ORDER_TYPE_STOP_LIMIT 2 STOP_LIMIT: An order that will be executed at a specified price, or better, after a given stop price has been reached. ORDER_TYPE_ICEBERG 3 ICEBERG: A large order divided into smaller lots to hide the actual order quantity. Only the visible part of the order is shown in the order book. ORDER_TYPE_BLOCK 4 BLOCK: (Not yet supported) User defined block order, generally a large quantity order filled all at once. ORDER_TYPE_BALANCE 5 BALANCE: (Not yet supported) Balance order aims to balance supply and demand, usually at a specific location or within a system. ORDER_TYPE_PREARRANGED 6 PRE: (Not yet supported) On exchange prearranged trade, a trade that has been privately negotiated and then submitted to the exchange. ORDER_TYPE_PRIVATE 7 PRIVATE: (Not yet supported) Private and confidential trade, not visible in the public order book and has no market impact. <p></p>"},{"location":"protobuf-reference/frequenz/api/electricity_trading/v1/electricity_trading/#electricitytradingservice","title":"ElectricityTradingService","text":"<p>Service providing operations related to order management.</p> Method Name Request Type Response Type Description CreateGridpoolOrder CreateGridpoolOrderRequest CreateGridpoolOrderResponse Creates a new order for a given Gridpool. UpdateGridpoolOrder UpdateGridpoolOrderRequest UpdateGridpoolOrderResponse Updates an existing order for a given Gridpool. CancelGridpoolOrder CancelGridpoolOrderRequest CancelGridpoolOrderResponse Cancels an existing order for a given Gridpool. CancelAllGridpoolOrders CancelAllGridpoolOrdersRequest CancelAllGridpoolOrdersResponse Cancels all open orders for a given Gridpool. GetGridpoolOrder GetGridpoolOrderRequest GetGridpoolOrderResponse Fetches the details of a specific order for a given Gridpool. ListGridpoolOrders ListGridpoolOrdersRequest ListGridpoolOrdersResponse Lists all the orders for a given Gridpool. ReceiveGridpoolOrdersStream ReceiveGridpoolOrdersStreamRequest ReceiveGridpoolOrdersStreamResponse stream Stream order updates for a given Gridpool. ListPublicOrders ListPublicOrdersRequest ListPublicOrdersResponse Lists all public executed historic orders (trades). ReceivePublicOrdersStream ReceivePublicOrdersStreamRequest ReceivePublicOrdersStreamResponse stream Stream all executed public orders (trades)."},{"location":"protobuf-reference/frequenz/api/electricity_trading/v1/electricity_trading/#scalar-value-types","title":"Scalar Value Types","text":".proto Type Notes C++ Java Python Go C# PHP Ruby  double double double float float64 double float Float  float float float float float32 float float Float  int32 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint32 instead. int32 int int int32 int integer Bignum or Fixnum (as required)  int64 Uses variable-length encoding. Inefficient for encoding negative numbers \u2013 if your field is likely to have negative values, use sint64 instead. int64 long int/long int64 long integer/string Bignum  uint32 Uses variable-length encoding. uint32 int int/long uint32 uint integer Bignum or Fixnum (as required)  uint64 Uses variable-length encoding. uint64 long int/long uint64 ulong integer/string Bignum or Fixnum (as required)  sint32 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int32s. int32 int int int32 int integer Bignum or Fixnum (as required)  sint64 Uses variable-length encoding. Signed int value. These more efficiently encode negative numbers than regular int64s. int64 long int/long int64 long integer/string Bignum  fixed32 Always four bytes. More efficient than uint32 if values are often greater than 2^28. uint32 int int uint32 uint integer Bignum or Fixnum (as required)  fixed64 Always eight bytes. More efficient than uint64 if values are often greater than 2^56. uint64 long int/long uint64 ulong integer/string Bignum  sfixed32 Always four bytes. int32 int int int32 int integer Bignum or Fixnum (as required)  sfixed64 Always eight bytes. int64 long int/long int64 long integer/string Bignum  bool bool boolean boolean bool bool boolean TrueClass/FalseClass  string A string must always contain UTF-8 encoded or 7-bit ASCII text. string String str/unicode string string string String (UTF-8)  bytes May contain any arbitrary sequence of bytes. string ByteString str []byte ByteString string String (ASCII-8BIT)"},{"location":"python-reference/SUMMARY/","title":"SUMMARY","text":"<ul> <li>frequenz<ul> <li>api<ul> <li>electricity_trading<ul> <li>v1<ul> <li>electricity_trading_pb2</li> <li>electricity_trading_pb2_grpc</li> </ul> </li> </ul> </li> </ul> </li> </ul> </li> </ul>"},{"location":"python-reference/frequenz/api/electricity_trading/","title":"Index","text":""},{"location":"python-reference/frequenz/api/electricity_trading/#frequenz.api.electricity_trading","title":"frequenz.api.electricity_trading","text":"<p>Frequenz gRPC API for electricity trading.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/","title":"Index","text":""},{"location":"python-reference/frequenz/api/electricity_trading/v1/#frequenz.api.electricity_trading.v1","title":"frequenz.api.electricity_trading.v1","text":"<p>Frequenz gRPC API for electricity trading.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/","title":"electricity_trading_pb2","text":""},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2","title":"frequenz.api.electricity_trading.v1.electricity_trading_pb2","text":"<p>Generated protocol buffer code.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2-attributes","title":"Attributes","text":""},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.MARKET_SIDE_BUY","title":"frequenz.api.electricity_trading.v1.electricity_trading_pb2.MARKET_SIDE_BUY  <code>module-attribute</code>","text":"<pre><code>MARKET_SIDE_BUY: MarketSide.ValueType\n</code></pre> <p>BUY: Order to purchase electricity. This is referred to as a 'bid' in the order book.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.MARKET_SIDE_SELL","title":"frequenz.api.electricity_trading.v1.electricity_trading_pb2.MARKET_SIDE_SELL  <code>module-attribute</code>","text":"<pre><code>MARKET_SIDE_SELL: MarketSide.ValueType\n</code></pre> <p>SELL: Order to sell electricity. This is referred to as an 'ask' or 'offer' in the order book.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.MARKET_SIDE_UNSPECIFIED","title":"frequenz.api.electricity_trading.v1.electricity_trading_pb2.MARKET_SIDE_UNSPECIFIED  <code>module-attribute</code>","text":"<pre><code>MARKET_SIDE_UNSPECIFIED: MarketSide.ValueType\n</code></pre> <p>UNSPECIFIED: The side of the market has not been set.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.ORDER_EXECUTION_OPTION_AON","title":"frequenz.api.electricity_trading.v1.electricity_trading_pb2.ORDER_EXECUTION_OPTION_AON  <code>module-attribute</code>","text":"<pre><code>ORDER_EXECUTION_OPTION_AON: OrderExecutionOption.ValueType\n</code></pre> <p>All or None: Order must be executed in its entirety, or not executed at all.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.ORDER_EXECUTION_OPTION_FOK","title":"frequenz.api.electricity_trading.v1.electricity_trading_pb2.ORDER_EXECUTION_OPTION_FOK  <code>module-attribute</code>","text":"<pre><code>ORDER_EXECUTION_OPTION_FOK: OrderExecutionOption.ValueType\n</code></pre> <p>Fill or Kill: Order must be executed immediately in its entirety, or not at all.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.ORDER_EXECUTION_OPTION_IOC","title":"frequenz.api.electricity_trading.v1.electricity_trading_pb2.ORDER_EXECUTION_OPTION_IOC  <code>module-attribute</code>","text":"<pre><code>ORDER_EXECUTION_OPTION_IOC: OrderExecutionOption.ValueType\n</code></pre> <p>Immediate or Cancel: Any portion of an order that cannot be filled immediately will be cancelled.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.ORDER_EXECUTION_OPTION_NONE","title":"frequenz.api.electricity_trading.v1.electricity_trading_pb2.ORDER_EXECUTION_OPTION_NONE  <code>module-attribute</code>","text":"<pre><code>ORDER_EXECUTION_OPTION_NONE: OrderExecutionOption.ValueType\n</code></pre> <p>Order remains open until it's fully fulfilled, cancelled by the client, <code>valid_until</code> timestamp is reached, or the end of the trading session.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.ORDER_EXECUTION_OPTION_UNSPECIFIED","title":"frequenz.api.electricity_trading.v1.electricity_trading_pb2.ORDER_EXECUTION_OPTION_UNSPECIFIED  <code>module-attribute</code>","text":"<pre><code>ORDER_EXECUTION_OPTION_UNSPECIFIED: OrderExecutionOption.ValueType\n</code></pre> <p>UNSPECIFIED: The order execution option has not been set.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.ORDER_STATE_ACTIVE","title":"frequenz.api.electricity_trading.v1.electricity_trading_pb2.ORDER_STATE_ACTIVE  <code>module-attribute</code>","text":"<pre><code>ORDER_STATE_ACTIVE: OrderState.ValueType\n</code></pre> <p>ACTIVE: The order has been confirmed and is open in the market. It may be unfilled or partially filled.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.ORDER_STATE_CANCELED","title":"frequenz.api.electricity_trading.v1.electricity_trading_pb2.ORDER_STATE_CANCELED  <code>module-attribute</code>","text":"<pre><code>ORDER_STATE_CANCELED: OrderState.ValueType\n</code></pre> <p>CANCELED: The order has been cancelled. This can occur due to a cancellation request by the market participant, system, or market operator.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.ORDER_STATE_CANCEL_REJECTED","title":"frequenz.api.electricity_trading.v1.electricity_trading_pb2.ORDER_STATE_CANCEL_REJECTED  <code>module-attribute</code>","text":"<pre><code>ORDER_STATE_CANCEL_REJECTED: OrderState.ValueType\n</code></pre> <p>CANCEL_REJECTED: The order cancellation request was rejected, likely due to it having already been filled or expired.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.ORDER_STATE_CANCEL_REQUESTED","title":"frequenz.api.electricity_trading.v1.electricity_trading_pb2.ORDER_STATE_CANCEL_REQUESTED  <code>module-attribute</code>","text":"<pre><code>ORDER_STATE_CANCEL_REQUESTED: OrderState.ValueType\n</code></pre> <p>CANCEL_REQUESTED: A cancellation request for the order has been submitted but the order is not yet removed from the order book.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.ORDER_STATE_EXPIRED","title":"frequenz.api.electricity_trading.v1.electricity_trading_pb2.ORDER_STATE_EXPIRED  <code>module-attribute</code>","text":"<pre><code>ORDER_STATE_EXPIRED: OrderState.ValueType\n</code></pre> <p>EXPIRED: The order has not been filled within the defined duration and has expired.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.ORDER_STATE_FAILED","title":"frequenz.api.electricity_trading.v1.electricity_trading_pb2.ORDER_STATE_FAILED  <code>module-attribute</code>","text":"<pre><code>ORDER_STATE_FAILED: OrderState.ValueType\n</code></pre> <p>FAILED: The order submission failed and was unable to be placed on the order book, usually due to a validation error or system issue.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.ORDER_STATE_FILLED","title":"frequenz.api.electricity_trading.v1.electricity_trading_pb2.ORDER_STATE_FILLED  <code>module-attribute</code>","text":"<pre><code>ORDER_STATE_FILLED: OrderState.ValueType\n</code></pre> <p>FILLED: The order has been completely filled and there are no remaining quantities on the order.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.ORDER_STATE_HIBERNATE","title":"frequenz.api.electricity_trading.v1.electricity_trading_pb2.ORDER_STATE_HIBERNATE  <code>module-attribute</code>","text":"<pre><code>ORDER_STATE_HIBERNATE: OrderState.ValueType\n</code></pre> <p>HIBERNATE: The order has been entered into the system but is not currently exposed to the market. This could be due to certain conditions not yet being met.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.ORDER_STATE_PENDING","title":"frequenz.api.electricity_trading.v1.electricity_trading_pb2.ORDER_STATE_PENDING  <code>module-attribute</code>","text":"<pre><code>ORDER_STATE_PENDING: OrderState.ValueType\n</code></pre> <p>PENDING: The order has been sent to the marketplace but has not yet been confirmed. This can be due to awaiting validation or system processing.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.ORDER_STATE_RECALL","title":"frequenz.api.electricity_trading.v1.electricity_trading_pb2.ORDER_STATE_RECALL  <code>module-attribute</code>","text":"<pre><code>ORDER_STATE_RECALL: OrderState.ValueType\n</code></pre> <p>RECALL: The order has been recalled. This could be due to a system issue or a request from the market participant or market operator.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.ORDER_STATE_UNSPECIFIED","title":"frequenz.api.electricity_trading.v1.electricity_trading_pb2.ORDER_STATE_UNSPECIFIED  <code>module-attribute</code>","text":"<pre><code>ORDER_STATE_UNSPECIFIED: OrderState.ValueType\n</code></pre> <p>UNSPECIFIED: The order state is not known. This is usually the default state of a newly created order object before any operations have been applied.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.ORDER_TYPE_BALANCE","title":"frequenz.api.electricity_trading.v1.electricity_trading_pb2.ORDER_TYPE_BALANCE  <code>module-attribute</code>","text":"<pre><code>ORDER_TYPE_BALANCE: OrderType.ValueType\n</code></pre> <p>BALANCE: (Not yet supported) Balance order aims to balance supply and demand, usually at a specific location or within a system.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.ORDER_TYPE_BLOCK","title":"frequenz.api.electricity_trading.v1.electricity_trading_pb2.ORDER_TYPE_BLOCK  <code>module-attribute</code>","text":"<pre><code>ORDER_TYPE_BLOCK: OrderType.ValueType\n</code></pre> <p>BLOCK: (Not yet supported) User defined block order, generally a large quantity order filled all at once.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.ORDER_TYPE_ICEBERG","title":"frequenz.api.electricity_trading.v1.electricity_trading_pb2.ORDER_TYPE_ICEBERG  <code>module-attribute</code>","text":"<pre><code>ORDER_TYPE_ICEBERG: OrderType.ValueType\n</code></pre> <p>ICEBERG: A large order divided into smaller lots to hide the actual order quantity. Only the visible part of the order is shown in the order book.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.ORDER_TYPE_LIMIT","title":"frequenz.api.electricity_trading.v1.electricity_trading_pb2.ORDER_TYPE_LIMIT  <code>module-attribute</code>","text":"<pre><code>ORDER_TYPE_LIMIT: OrderType.ValueType\n</code></pre> <p>LIMIT: Order to buy or sell at a specific price or better. It remains active until it is filled, cancelled, or expired.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.ORDER_TYPE_PREARRANGED","title":"frequenz.api.electricity_trading.v1.electricity_trading_pb2.ORDER_TYPE_PREARRANGED  <code>module-attribute</code>","text":"<pre><code>ORDER_TYPE_PREARRANGED: OrderType.ValueType\n</code></pre> <p>PRE: (Not yet supported) On exchange prearranged trade, a trade that has been privately negotiated and then submitted to the exchange.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.ORDER_TYPE_PRIVATE","title":"frequenz.api.electricity_trading.v1.electricity_trading_pb2.ORDER_TYPE_PRIVATE  <code>module-attribute</code>","text":"<pre><code>ORDER_TYPE_PRIVATE: OrderType.ValueType\n</code></pre> <p>PRIVATE: (Not yet supported) Private and confidential trade, not visible in the public order book and has no market impact.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.ORDER_TYPE_STOP_LIMIT","title":"frequenz.api.electricity_trading.v1.electricity_trading_pb2.ORDER_TYPE_STOP_LIMIT  <code>module-attribute</code>","text":"<pre><code>ORDER_TYPE_STOP_LIMIT: OrderType.ValueType\n</code></pre> <p>STOP_LIMIT: An order that will be executed at a specified price, or better, after a given stop price has been reached.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.ORDER_TYPE_UNSPECIFIED","title":"frequenz.api.electricity_trading.v1.electricity_trading_pb2.ORDER_TYPE_UNSPECIFIED  <code>module-attribute</code>","text":"<pre><code>ORDER_TYPE_UNSPECIFIED: OrderType.ValueType\n</code></pre> <p>UNSPECIFIED: The order type has not been set.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2-classes","title":"Classes","text":""},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.CancelAllGridpoolOrdersRequest","title":"frequenz.api.electricity_trading.v1.electricity_trading_pb2.CancelAllGridpoolOrdersRequest","text":"<p>             Bases: <code>Message</code></p> <p>Request to cancel all currently open orders for a given Gridpool.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.CancelAllGridpoolOrdersRequest-attributes","title":"Attributes","text":""},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.CancelAllGridpoolOrdersRequest.gridpool_id","title":"gridpool_id  <code>instance-attribute</code>","text":"<pre><code>gridpool_id: builtins.int\n</code></pre> <p>ID of the gridpool containing the orders to be cancelled.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.CancelAllGridpoolOrdersResponse","title":"frequenz.api.electricity_trading.v1.electricity_trading_pb2.CancelAllGridpoolOrdersResponse","text":"<p>             Bases: <code>Message</code></p> <p>Response to canceling all currently open orders for a given Gridpool.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.CancelAllGridpoolOrdersResponse-attributes","title":"Attributes","text":""},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.CancelAllGridpoolOrdersResponse.gridpool_id","title":"gridpool_id  <code>instance-attribute</code>","text":"<pre><code>gridpool_id: builtins.int\n</code></pre> <p>ID of the gridpool to cancel the orders for.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.CancelGridpoolOrderRequest","title":"frequenz.api.electricity_trading.v1.electricity_trading_pb2.CancelGridpoolOrderRequest","text":"<p>             Bases: <code>Message</code></p> <p>Request to cancel an existing order for a given Gridpool.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.CancelGridpoolOrderRequest-attributes","title":"Attributes","text":""},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.CancelGridpoolOrderRequest.gridpool_id","title":"gridpool_id  <code>instance-attribute</code>","text":"<pre><code>gridpool_id: builtins.int\n</code></pre> <p>ID of the gridpool the order belongs to.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.CancelGridpoolOrderRequest.order_id","title":"order_id  <code>instance-attribute</code>","text":"<pre><code>order_id: builtins.int\n</code></pre> <p>ID of the order to be cancelled.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.CancelGridpoolOrderResponse","title":"frequenz.api.electricity_trading.v1.electricity_trading_pb2.CancelGridpoolOrderResponse","text":"<p>             Bases: <code>Message</code></p> <p>Response from canceling an existing order for a given Gridpool.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.CancelGridpoolOrderResponse-attributes","title":"Attributes","text":""},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.CancelGridpoolOrderResponse.gridpool_id","title":"gridpool_id  <code>instance-attribute</code>","text":"<pre><code>gridpool_id: builtins.int\n</code></pre> <p>ID of the gridpool the order belongs to.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.CancelGridpoolOrderResponse.order_detail","title":"order_detail  <code>property</code>","text":"<pre><code>order_detail: global___OrderDetail\n</code></pre> <p>Details of the cancelled order.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.CreateGridpoolOrderRequest","title":"frequenz.api.electricity_trading.v1.electricity_trading_pb2.CreateGridpoolOrderRequest","text":"<p>             Bases: <code>Message</code></p> <p>Represents a request to create a new order for a specific Gridpool.</p> <p>A Gridpool is a collection of microgrids that can span multiple delivery areas. It's important to note that when submitting an order for a Gridpool, you must group microgrids by their respective delivery areas. This means you should submit separate orders for each delivery area within the Gridpool. Failing to do so could lead to inaccuracies in the bidding process and may not fully represent the capabilities or constraints of the microgrids in different delivery areas. However, in most countries only one delivery area exists, exceptions are countries like e.g. Australia, Germany and the US.</p> <p>Caution</p> <p>If a Gridpool contains microgrids in both Delivery Area A and Delivery  Area B, you should submit one order for Delivery Area A and another for  Delivery Area B, specifying the details for each.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.CreateGridpoolOrderRequest-attributes","title":"Attributes","text":""},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.CreateGridpoolOrderRequest.gridpool_id","title":"gridpool_id  <code>instance-attribute</code>","text":"<pre><code>gridpool_id: builtins.int\n</code></pre> <p>Unique identifier for the Gridpool to which the bid belongs.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.CreateGridpoolOrderRequest.order","title":"order  <code>property</code>","text":"<pre><code>order: global___Order\n</code></pre> <p>The details of the order being placed.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.CreateGridpoolOrderResponse","title":"frequenz.api.electricity_trading.v1.electricity_trading_pb2.CreateGridpoolOrderResponse","text":"<p>             Bases: <code>Message</code></p> <p>Represents the server's response after a new order has been successfully created for a specific Gridpool.</p> <p>This response provides essential details about the newly created order, such as the unique order ID and the state of the order. By receiving this response, users can be sure that their order has been placed successfully for the designated Gridpool.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.CreateGridpoolOrderResponse-attributes","title":"Attributes","text":""},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.CreateGridpoolOrderResponse.gridpool_id","title":"gridpool_id  <code>instance-attribute</code>","text":"<pre><code>gridpool_id: builtins.int\n</code></pre> <p>ID of the gridpool the order belongs to.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.CreateGridpoolOrderResponse.order_detail","title":"order_detail  <code>property</code>","text":"<pre><code>order_detail: global___OrderDetail\n</code></pre> <p>Details of the newly created order.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.GetGridpoolOrderRequest","title":"frequenz.api.electricity_trading.v1.electricity_trading_pb2.GetGridpoolOrderRequest","text":"<p>             Bases: <code>Message</code></p> <p>Request to retrieve a single order for a given Gridpool.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.GetGridpoolOrderRequest-attributes","title":"Attributes","text":""},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.GetGridpoolOrderRequest.gridpool_id","title":"gridpool_id  <code>instance-attribute</code>","text":"<pre><code>gridpool_id: builtins.int\n</code></pre> <p>ID of the gridpool containing the order to be retrieved.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.GetGridpoolOrderRequest.order_id","title":"order_id  <code>instance-attribute</code>","text":"<pre><code>order_id: builtins.int\n</code></pre> <p>ID of the order to be retrieved.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.GetGridpoolOrderResponse","title":"frequenz.api.electricity_trading.v1.electricity_trading_pb2.GetGridpoolOrderResponse","text":"<p>             Bases: <code>Message</code></p> <p>Response from requesting order details for a specific order.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.GetGridpoolOrderResponse-attributes","title":"Attributes","text":""},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.GetGridpoolOrderResponse.gridpool_id","title":"gridpool_id  <code>instance-attribute</code>","text":"<pre><code>gridpool_id: builtins.int\n</code></pre> <p>ID of the gridpool containing the retrieved order.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.GetGridpoolOrderResponse.order_detail","title":"order_detail  <code>property</code>","text":"<pre><code>order_detail: global___OrderDetail\n</code></pre> <p>Details of the retrieved order.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.GridpoolOrderFilter","title":"frequenz.api.electricity_trading.v1.electricity_trading_pb2.GridpoolOrderFilter","text":"<p>             Bases: <code>Message</code></p> <p>Parameters for filtering Gridpool orders.</p> <p>Note</p> <p>Multiple filters can be used in combination to narrow down the returned results. For example, you can apply both state and side filters simultaneously to list only the open orders on the buy side of the market.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.GridpoolOrderFilter-attributes","title":"Attributes","text":""},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.GridpoolOrderFilter.delivery_area","title":"delivery_area  <code>property</code>","text":"<pre><code>delivery_area: frequenz.api.common.v1.grid.delivery_area_pb2.DeliveryArea\n</code></pre> <p>Optional filter for delivery area.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.GridpoolOrderFilter.delivery_period","title":"delivery_period  <code>property</code>","text":"<pre><code>delivery_period: frequenz.api.common.v1.grid.delivery_duration_pb2.DeliveryPeriod\n</code></pre> <p>Optional filter for delivery period.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.GridpoolOrderFilter.side","title":"side  <code>instance-attribute</code>","text":"<pre><code>side: global___MarketSide.ValueType\n</code></pre> <p>Optional filter for order side.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.GridpoolOrderFilter.states","title":"states  <code>property</code>","text":"<pre><code>states: google.protobuf.internal.containers.RepeatedScalarFieldContainer[\nglobal___OrderState.ValueType\n]\n</code></pre> <p>Optional filter for order state.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.GridpoolOrderFilter.tag","title":"tag  <code>instance-attribute</code>","text":"<pre><code>tag: builtins.str\n</code></pre> <p>Optional filters the listed orders by their associated tag.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.ListGridpoolOrdersRequest","title":"frequenz.api.electricity_trading.v1.electricity_trading_pb2.ListGridpoolOrdersRequest","text":"<p>             Bases: <code>Message</code></p> <p>Request to retrieve a list of orders for a specific Gridpool.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.ListGridpoolOrdersRequest-attributes","title":"Attributes","text":""},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.ListGridpoolOrdersRequest.filter","title":"filter  <code>property</code>","text":"<pre><code>filter: global___GridpoolOrderFilter\n</code></pre> <p>Optional Gridpool orders filter.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.ListGridpoolOrdersRequest.gridpool_id","title":"gridpool_id  <code>instance-attribute</code>","text":"<pre><code>gridpool_id: builtins.int\n</code></pre> <p>The Gridpool to retrieve the orders for.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.ListGridpoolOrdersRequest.pagination_params","title":"pagination_params  <code>property</code>","text":"<pre><code>pagination_params: frequenz.api.common.v1.pagination.pagination_params_pb2.PaginationParams\n</code></pre> <p>Pagination parameters.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.ListGridpoolOrdersResponse","title":"frequenz.api.electricity_trading.v1.electricity_trading_pb2.ListGridpoolOrdersResponse","text":"<p>             Bases: <code>Message</code></p> <p>Response from listing orders for a given Gridpool.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.ListGridpoolOrdersResponse-attributes","title":"Attributes","text":""},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.ListGridpoolOrdersResponse.order_detail_lists","title":"order_detail_lists  <code>property</code>","text":"<pre><code>order_detail_lists: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[\nglobal___OrderDetail\n]\n</code></pre> <p>List of all listed orders with their details.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.ListGridpoolOrdersResponse.pagination_info","title":"pagination_info  <code>property</code>","text":"<pre><code>pagination_info: frequenz.api.common.v1.pagination.pagination_info_pb2.PaginationInfo\n</code></pre> <p>Metadata for pagination, including token for next page to retrieve.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.ListPublicOrdersRequest","title":"frequenz.api.electricity_trading.v1.electricity_trading_pb2.ListPublicOrdersRequest","text":"<p>             Bases: <code>Message</code></p> <p>Request to list all executed public orders with optional filters. This method allows for querying historical data, useful for various analytics tasks.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.ListPublicOrdersRequest-attributes","title":"Attributes","text":""},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.ListPublicOrdersRequest.filter","title":"filter  <code>property</code>","text":"<pre><code>filter: global___PublicOrderFilter\n</code></pre> <p>Optional filter to narrow down the list of public orders.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.ListPublicOrdersRequest.pagination_params","title":"pagination_params  <code>property</code>","text":"<pre><code>pagination_params: frequenz.api.common.v1.pagination.pagination_params_pb2.PaginationParams\n</code></pre> <p>Pagination parameters.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.ListPublicOrdersResponse","title":"frequenz.api.electricity_trading.v1.electricity_trading_pb2.ListPublicOrdersResponse","text":"<p>             Bases: <code>Message</code></p> <p>ListPublicOrdersResponse is a message that contains a list of historic executed public orders. This dataset is vital for tasks such as training machine learning models, backtesting trading strategies, and conducting market analysis.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.ListPublicOrdersResponse-attributes","title":"Attributes","text":""},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.ListPublicOrdersResponse.pagination_info","title":"pagination_info  <code>property</code>","text":"<pre><code>pagination_info: frequenz.api.common.v1.pagination.pagination_info_pb2.PaginationInfo\n</code></pre> <p>Metadata for pagination, including token for next page to retrieve.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.ListPublicOrdersResponse.public_order_lists","title":"public_order_lists  <code>property</code>","text":"<pre><code>public_order_lists: google.protobuf.internal.containers.RepeatedCompositeFieldContainer[\nglobal___PublicOrder\n]\n</code></pre> <p>List of all public orders that met the specified filtering criteria.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.MarketSide","title":"frequenz.api.electricity_trading.v1.electricity_trading_pb2.MarketSide","text":"<p>             Bases: <code>_MarketSide</code></p> <p>Enum for the side of the market that the order is on.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.Order","title":"frequenz.api.electricity_trading.v1.electricity_trading_pb2.Order","text":"<p>             Bases: <code>Message</code></p> <p>Represents an order in the electricity market.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.Order-attributes","title":"Attributes","text":""},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.Order.delivery_area","title":"delivery_area  <code>property</code>","text":"<pre><code>delivery_area: frequenz.api.common.v1.grid.delivery_area_pb2.DeliveryArea\n</code></pre> <p>The delivery area where the contract is to be delivered. The representation of the delivery area may vary by jurisdiction.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.Order.delivery_period","title":"delivery_period  <code>property</code>","text":"<pre><code>delivery_period: frequenz.api.common.v1.grid.delivery_duration_pb2.DeliveryPeriod\n</code></pre> <p>The delivery period for the contract, specified as a start and end timestamp in UTC. It represents the period during which the contract is expected to be fulfilled.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.Order.display_quantity","title":"display_quantity  <code>property</code>","text":"<pre><code>display_quantity: frequenz.api.common.v1.market.energy_pb2.Energy\n</code></pre> <p>Applicable for ICEBERG orders. This is the quantity of the order to be displayed in the order book.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.Order.execution_option","title":"execution_option  <code>instance-attribute</code>","text":"<pre><code>execution_option: global___OrderExecutionOption.ValueType\n</code></pre> <p>Optional execution options such as All or None, Fill or Kill, etc.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.Order.payload","title":"payload  <code>property</code>","text":"<pre><code>payload: google.protobuf.struct_pb2.Struct\n</code></pre> <p>Optional user-defined payload individual to a specific order. This can be any data that needs to be associated with the order.</p> <p>The field can store e.g. JSON objects containing details involved in the order. This feature can simplify application development by eliminating the need for complicated state management to remember the specifics of each order.</p> <p>By embedding this \"state\" within the order itself, you can include specifics like which microgrids consume or provide how much power. This makes it easier to manage complex orders and can simplify the logic required in applications.</p> <p>Example JSON payload: {   \"microgrids\": [     {       \"microgrid_id\": \"1\",       \"mwh\": 1.0     },     {       \"microgrid_id\": \"2\",       \"mwh\": 0.5     }   ] }</p> <p>In this example, if the order is exectuted, these microgrids might consume the electricity mentioned in the example JSON payload.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.Order.peak_price_delta","title":"peak_price_delta  <code>property</code>","text":"<pre><code>peak_price_delta: frequenz.api.common.v1.market.price_pb2.Price\n</code></pre> <p>Applicable for ICEBERG orders. This is the price difference between the peak price and the limit price.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.Order.price","title":"price  <code>property</code>","text":"<pre><code>price: frequenz.api.common.v1.market.price_pb2.Price\n</code></pre> <p>The limit price at which the contract is to be traded. This is the maximum price for a BUY order or the minimum price for a SELL order.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.Order.quantity","title":"quantity  <code>property</code>","text":"<pre><code>quantity: frequenz.api.common.v1.market.energy_pb2.Energy\n</code></pre> <p>The quantity of the contract being traded, specified in MWh.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.Order.side","title":"side  <code>instance-attribute</code>","text":"<pre><code>side: global___MarketSide.ValueType\n</code></pre> <p>Indicates if the order is on the Buy or Sell side of the market.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.Order.stop_price","title":"stop_price  <code>property</code>","text":"<pre><code>stop_price: frequenz.api.common.v1.market.price_pb2.Price\n</code></pre> <p>Applicable for STOP_LIMIT orders. This is the stop price that triggers the limit order.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.Order.tag","title":"tag  <code>instance-attribute</code>","text":"<pre><code>tag: builtins.str\n</code></pre> <p>Optional user-defined tag to group related orders.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.Order.type","title":"type  <code>instance-attribute</code>","text":"<pre><code>type: global___OrderType.ValueType\n</code></pre> <p>The type of order, such as LIMIT, STOP_LIMIT, ICEBERG etc. This determines how the order is to be executed in the market.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.Order.valid_until","title":"valid_until  <code>property</code>","text":"<pre><code>valid_until: google.protobuf.timestamp_pb2.Timestamp\n</code></pre> <p>Do not use if ExecutionOption is set to FOK or IOC. This is an optional UTC timestamp defining the time after which the order should be cancelled if not filled.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.OrderDetail","title":"frequenz.api.electricity_trading.v1.electricity_trading_pb2.OrderDetail","text":"<p>             Bases: <code>Message</code></p> <p>Represents an order with full details, including its ID, state and associated UTC timestamps.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.OrderDetail-attributes","title":"Attributes","text":""},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.OrderDetail.create_time","title":"create_time  <code>property</code>","text":"<pre><code>create_time: google.protobuf.timestamp_pb2.Timestamp\n</code></pre> <p>UTC Timestamp when the order was created.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.OrderDetail.filled_quantity","title":"filled_quantity  <code>property</code>","text":"<pre><code>filled_quantity: frequenz.api.common.v1.market.energy_pb2.Energy\n</code></pre> <p>Filled quantity for this order.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.OrderDetail.modification_time","title":"modification_time  <code>property</code>","text":"<pre><code>modification_time: google.protobuf.timestamp_pb2.Timestamp\n</code></pre> <p>UTC Timestamp of the last update to the order.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.OrderDetail.open_quantity","title":"open_quantity  <code>property</code>","text":"<pre><code>open_quantity: frequenz.api.common.v1.market.energy_pb2.Energy\n</code></pre> <p>Remaining open quantity for this order.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.OrderDetail.order","title":"order  <code>property</code>","text":"<pre><code>order: global___Order\n</code></pre> <p>The details of the order.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.OrderDetail.order_id","title":"order_id  <code>instance-attribute</code>","text":"<pre><code>order_id: builtins.int\n</code></pre> <p>Unique identifier of the order.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.OrderDetail.state_detail","title":"state_detail  <code>property</code>","text":"<pre><code>state_detail: global___OrderDetail.StateDetail\n</code></pre> <p>Details of the order's current state.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.OrderDetail-classes","title":"Classes","text":""},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.OrderDetail.StateDetail","title":"StateDetail","text":"<p>             Bases: <code>Message</code></p> <p>Inner message providing details about the current state of the order.</p> Attributes\u00a4 MARKET_ACTOR_MARKET_OPERATOR <code>instance-attribute</code> \u00a4 <pre><code>MARKET_ACTOR_MARKET_OPERATOR: OrderDetail.StateDetail.MarketActor.ValueType\n</code></pre> <p>The market operator was the actor.</p> MARKET_ACTOR_SYSTEM <code>instance-attribute</code> \u00a4 <pre><code>MARKET_ACTOR_SYSTEM: OrderDetail.StateDetail.MarketActor.ValueType\n</code></pre> <p>The system was the actor.</p> MARKET_ACTOR_USER <code>instance-attribute</code> \u00a4 <pre><code>MARKET_ACTOR_USER: OrderDetail.StateDetail.MarketActor.ValueType\n</code></pre> <p>The user was the actor.</p> STATE_REASON_ADD <code>instance-attribute</code> \u00a4 <pre><code>STATE_REASON_ADD: OrderDetail.StateDetail.StateReason.ValueType\n</code></pre> <p>The order was added.</p> STATE_REASON_DEACTIVATE <code>instance-attribute</code> \u00a4 <pre><code>STATE_REASON_DEACTIVATE: OrderDetail.StateDetail.StateReason.ValueType\n</code></pre> <p>The order was deactivated.</p> STATE_REASON_DELETE <code>instance-attribute</code> \u00a4 <pre><code>STATE_REASON_DELETE: OrderDetail.StateDetail.StateReason.ValueType\n</code></pre> <p>The order was deleted.</p> STATE_REASON_FULL_EXECUTION <code>instance-attribute</code> \u00a4 <pre><code>STATE_REASON_FULL_EXECUTION: OrderDetail.StateDetail.StateReason.ValueType\n</code></pre> <p>The order was fully executed.</p> STATE_REASON_ICEBERG_SLICE_ADD <code>instance-attribute</code> \u00a4 <pre><code>STATE_REASON_ICEBERG_SLICE_ADD: OrderDetail.StateDetail.StateReason.ValueType\n</code></pre> <p>An iceberg slice was added.</p> STATE_REASON_MODIFY <code>instance-attribute</code> \u00a4 <pre><code>STATE_REASON_MODIFY: OrderDetail.StateDetail.StateReason.ValueType\n</code></pre> <p>The order was modified.</p> STATE_REASON_PARTIAL_EXECUTION <code>instance-attribute</code> \u00a4 <pre><code>STATE_REASON_PARTIAL_EXECUTION: OrderDetail.StateDetail.StateReason.ValueType\n</code></pre> <p>The order was partially executed.</p> STATE_REASON_QUOTE_ADD <code>instance-attribute</code> \u00a4 <pre><code>STATE_REASON_QUOTE_ADD: OrderDetail.StateDetail.StateReason.ValueType\n</code></pre> <p>A quote was added.</p> STATE_REASON_QUOTE_FULL_EXECUTION <code>instance-attribute</code> \u00a4 <pre><code>STATE_REASON_QUOTE_FULL_EXECUTION: OrderDetail.StateDetail.StateReason.ValueType\n</code></pre> <p>A quote was fully executed.</p> STATE_REASON_QUOTE_PARTIAL_EXECUTION <code>instance-attribute</code> \u00a4 <pre><code>STATE_REASON_QUOTE_PARTIAL_EXECUTION: OrderDetail.StateDetail.StateReason.ValueType\n</code></pre> <p>A quote was partially executed.</p> STATE_REASON_REJECT <code>instance-attribute</code> \u00a4 <pre><code>STATE_REASON_REJECT: OrderDetail.StateDetail.StateReason.ValueType\n</code></pre> <p>The order was rejected.</p> STATE_REASON_UNKNOWN_STATE <code>instance-attribute</code> \u00a4 <pre><code>STATE_REASON_UNKNOWN_STATE: OrderDetail.StateDetail.StateReason.ValueType\n</code></pre> <p>The state of the order is unknown.</p> STATE_REASON_VALIDATION_FAIL <code>instance-attribute</code> \u00a4 <pre><code>STATE_REASON_VALIDATION_FAIL: OrderDetail.StateDetail.StateReason.ValueType\n</code></pre> <p>The order failed validation.</p> market_actor <code>instance-attribute</code> \u00a4 <pre><code>market_actor: global___OrderDetail.StateDetail.MarketActor.ValueType\n</code></pre> <p>Actor responsible for the current state.</p> state <code>instance-attribute</code> \u00a4 <pre><code>state: global___OrderState.ValueType\n</code></pre> <p>Current state of the order.</p> state_reason <code>instance-attribute</code> \u00a4 <pre><code>state_reason: global___OrderDetail.StateDetail.StateReason.ValueType\n</code></pre> <p>Reason for the current state.</p> Classes\u00a4 MarketActor \u00a4 <p>             Bases: <code>_MarketActor</code></p> <p>Enum describing the actor responsible for an order state change.</p> StateReason \u00a4 <p>             Bases: <code>_StateReason</code></p> <p>Enum describing the action that led to the state change.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.OrderExecutionOption","title":"frequenz.api.electricity_trading.v1.electricity_trading_pb2.OrderExecutionOption","text":"<p>             Bases: <code>_OrderExecutionOption</code></p> <p>OrderExecutionOption defines specific behavior for the execution of an order. These options provide control on how an order is handled in the market.</p> Source code in <code>py/frequenz/api/electricity_trading/v1/electricity_trading_pb2.py</code> <pre><code>_globals['_UPDATEGRIDPOOLORDERREQUEST_UPDATEORDER']._serialized_end=5348\n_globals['_UPDATEGRIDPOOLORDERRESPONSE']._serialized_start=5351\n_globals['_UPDATEGRIDPOOLORDERRESPONSE']._serialized_end=5493\n_globals['_CANCELGRIDPOOLORDERREQUEST']._serialized_start=5495\n</code></pre>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.OrderState","title":"frequenz.api.electricity_trading.v1.electricity_trading_pb2.OrderState","text":"<p>             Bases: <code>_OrderState</code></p> <p>Enum for the state of an order.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.OrderType","title":"frequenz.api.electricity_trading.v1.electricity_trading_pb2.OrderType","text":"<p>             Bases: <code>_OrderType</code></p> <p>Enum for the order types that can be specified for an order.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.PublicOrder","title":"frequenz.api.electricity_trading.v1.electricity_trading_pb2.PublicOrder","text":"<p>             Bases: <code>Message</code></p> <p>Represents a public order in the market.</p> <p>Each PublicOrder within this response message represents an order that was previously active in the public order book, along with its key attributes and final state.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.PublicOrder-attributes","title":"Attributes","text":""},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.PublicOrder.buy_delivery_area","title":"buy_delivery_area  <code>property</code>","text":"<pre><code>buy_delivery_area: frequenz.api.common.v1.grid.delivery_area_pb2.DeliveryArea\n</code></pre> <p>Delivery area code of the buy side.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.PublicOrder.delivery_period","title":"delivery_period  <code>property</code>","text":"<pre><code>delivery_period: frequenz.api.common.v1.grid.delivery_duration_pb2.DeliveryPeriod\n</code></pre> <p>The delivery period for the contract.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.PublicOrder.modification_time","title":"modification_time  <code>property</code>","text":"<pre><code>modification_time: google.protobuf.timestamp_pb2.Timestamp\n</code></pre> <p>UTC Timestamp of the last order update or matching.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.PublicOrder.price","title":"price  <code>property</code>","text":"<pre><code>price: frequenz.api.common.v1.market.price_pb2.Price\n</code></pre> <p>The limit price at which the contract is to be traded.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.PublicOrder.public_order_id","title":"public_order_id  <code>instance-attribute</code>","text":"<pre><code>public_order_id: builtins.int\n</code></pre> <p>ID of the order from the public order book.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.PublicOrder.quantity","title":"quantity  <code>property</code>","text":"<pre><code>quantity: frequenz.api.common.v1.market.energy_pb2.Energy\n</code></pre> <p>The quantity of the contract being traded in MWh.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.PublicOrder.sell_delivery_area","title":"sell_delivery_area  <code>property</code>","text":"<pre><code>sell_delivery_area: frequenz.api.common.v1.grid.delivery_area_pb2.DeliveryArea\n</code></pre> <p>Delivery area code of the sell side.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.PublicOrder.state","title":"state  <code>instance-attribute</code>","text":"<pre><code>state: global___OrderState.ValueType\n</code></pre> <p>State of the order.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.PublicOrderFilter","title":"frequenz.api.electricity_trading.v1.electricity_trading_pb2.PublicOrderFilter","text":"<p>             Bases: <code>Message</code></p> <p>Parameters for filtering the historic, publicly executed orders (trades).</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.PublicOrderFilter-attributes","title":"Attributes","text":""},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.PublicOrderFilter.buy_delivery_area","title":"buy_delivery_area  <code>property</code>","text":"<pre><code>buy_delivery_area: frequenz.api.common.v1.grid.delivery_area_pb2.DeliveryArea\n</code></pre> <p>If set, only orders in this buy delivery area are returned.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.PublicOrderFilter.delivery_period","title":"delivery_period  <code>property</code>","text":"<pre><code>delivery_period: frequenz.api.common.v1.grid.delivery_duration_pb2.DeliveryPeriod\n</code></pre> <p>If set, only orders with this delivery period are returned.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.PublicOrderFilter.sell_delivery_area","title":"sell_delivery_area  <code>property</code>","text":"<pre><code>sell_delivery_area: frequenz.api.common.v1.grid.delivery_area_pb2.DeliveryArea\n</code></pre> <p>If set, only orders in this sell delivery area are returned.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.PublicOrderFilter.states","title":"states  <code>property</code>","text":"<pre><code>states: google.protobuf.internal.containers.RepeatedScalarFieldContainer[\nglobal___OrderState.ValueType\n]\n</code></pre> <p>If set, only orders in this state are returned.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.ReceiveGridpoolOrdersStreamRequest","title":"frequenz.api.electricity_trading.v1.electricity_trading_pb2.ReceiveGridpoolOrdersStreamRequest","text":"<p>             Bases: <code>Message</code></p> <p>Subscribe to Gridpool order stream. This method provides real-time updates on Gridpool orders, making it useful for dynamic analytics and real-time decision-making.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.ReceiveGridpoolOrdersStreamRequest-attributes","title":"Attributes","text":""},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.ReceiveGridpoolOrdersStreamRequest.filter","title":"filter  <code>property</code>","text":"<pre><code>filter: global___GridpoolOrderFilter\n</code></pre> <p>Optional public orders filter.</p> <p>DeliveryPeriod Filter</p> <p>Ensure that the specified DeliveryPeriod is set for a future timeframe. If a past or present period is selected, the stream will automatically close and return no entries.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.ReceiveGridpoolOrdersStreamRequest.gridpool_id","title":"gridpool_id  <code>instance-attribute</code>","text":"<pre><code>gridpool_id: builtins.int\n</code></pre> <p>The gridpool to retrieve the orders for.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.ReceiveGridpoolOrdersStreamResponse","title":"frequenz.api.electricity_trading.v1.electricity_trading_pb2.ReceiveGridpoolOrdersStreamResponse","text":"<p>             Bases: <code>Message</code></p> <p>Response to a subscription request for a stream of Gridpool orders. Real-time information on gridpool orders is pushed through this response.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.ReceiveGridpoolOrdersStreamResponse-attributes","title":"Attributes","text":""},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.ReceiveGridpoolOrdersStreamResponse.order_detail","title":"order_detail  <code>property</code>","text":"<pre><code>order_detail: global___OrderDetail\n</code></pre> <p>Order detail response.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.ReceivePublicOrdersStreamRequest","title":"frequenz.api.electricity_trading.v1.electricity_trading_pb2.ReceivePublicOrdersStreamRequest","text":"<p>             Bases: <code>Message</code></p> <p>Subscribe to public order stream. This method provides real-time updates on newly executed public orders, making it useful for dynamic analytics and real-time decision-making.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.ReceivePublicOrdersStreamRequest-attributes","title":"Attributes","text":""},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.ReceivePublicOrdersStreamRequest.filter","title":"filter  <code>property</code>","text":"<pre><code>filter: global___PublicOrderFilter\n</code></pre> <p>Optional filter to specify which orders should be included in the stream.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.ReceivePublicOrdersStreamResponse","title":"frequenz.api.electricity_trading.v1.electricity_trading_pb2.ReceivePublicOrdersStreamResponse","text":"<p>             Bases: <code>Message</code></p> <p>Response to a subscription request for a stream of public orders. Real-time information on public orders is pushed through this response.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.ReceivePublicOrdersStreamResponse-attributes","title":"Attributes","text":""},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.ReceivePublicOrdersStreamResponse.public_order","title":"public_order  <code>property</code>","text":"<pre><code>public_order: global___PublicOrder\n</code></pre> <p>The public order that has been executed and is being broadcasted in real-time.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.UpdateGridpoolOrderRequest","title":"frequenz.api.electricity_trading.v1.electricity_trading_pb2.UpdateGridpoolOrderRequest","text":"<p>             Bases: <code>Message</code></p> <p>Request to update an existing order for a given Gridpool.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.UpdateGridpoolOrderRequest-attributes","title":"Attributes","text":""},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.UpdateGridpoolOrderRequest.gridpool_id","title":"gridpool_id  <code>instance-attribute</code>","text":"<pre><code>gridpool_id: builtins.int\n</code></pre> <p>ID of the Gridpool the order belongs to.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.UpdateGridpoolOrderRequest.order_id","title":"order_id  <code>instance-attribute</code>","text":"<pre><code>order_id: builtins.int\n</code></pre> <p>The order identifier</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.UpdateGridpoolOrderRequest.update_mask","title":"update_mask  <code>property</code>","text":"<pre><code>update_mask: google.protobuf.field_mask_pb2.FieldMask\n</code></pre> <p>Field mask specifying which fields should be updated</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.UpdateGridpoolOrderRequest.update_order_fields","title":"update_order_fields  <code>property</code>","text":"<pre><code>update_order_fields: global___UpdateGridpoolOrderRequest.UpdateOrder\n</code></pre> <p>The fields that can be updated</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.UpdateGridpoolOrderRequest-classes","title":"Classes","text":""},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.UpdateGridpoolOrderRequest.UpdateOrder","title":"UpdateOrder","text":"<p>             Bases: <code>Message</code></p> <p>Represents the order properties that can be updated after an order has been placed. At least one of the optional fields must be set for an update to take place.</p> Attributes\u00a4 display_quantity <code>property</code> \u00a4 <pre><code>display_quantity: frequenz.api.common.v1.market.energy_pb2.Energy\n</code></pre> <p>Applicable for ICEBERG orders. This is the updated quantity of the order to be displayed in the order book.</p> execution_option <code>instance-attribute</code> \u00a4 <pre><code>execution_option: global___OrderExecutionOption.ValueType\n</code></pre> <p>Updated execution options such as All or None, Fill or Kill, etc.</p> payload <code>property</code> \u00a4 <pre><code>payload: google.protobuf.struct_pb2.Struct\n</code></pre> <p>Updated user-defined payload individual to a specific order. This can be any data that the user wants to associate with the order.</p> peak_price_delta <code>property</code> \u00a4 <pre><code>peak_price_delta: frequenz.api.common.v1.market.price_pb2.Price\n</code></pre> <p>Applicable for ICEBERG orders. This is the updated price difference between the peak price and the limit price.</p> price <code>property</code> \u00a4 <pre><code>price: frequenz.api.common.v1.market.price_pb2.Price\n</code></pre> <p>The updated limit price at which the contract is to be traded. This is the maximum price for a BUY order or the minimum price for a SELL order.</p> quantity <code>property</code> \u00a4 <pre><code>quantity: frequenz.api.common.v1.market.energy_pb2.Energy\n</code></pre> <p>The updated quantity of the contract being traded, specified in MWh.</p> stop_price <code>property</code> \u00a4 <pre><code>stop_price: frequenz.api.common.v1.market.price_pb2.Price\n</code></pre> <p>Applicable for STOP_LIMIT orders. This is the updated stop price that triggers the limit order.</p> tag <code>instance-attribute</code> \u00a4 <pre><code>tag: builtins.str\n</code></pre> <p>Updated user-defined tag to group related orders.</p> valid_until <code>property</code> \u00a4 <pre><code>valid_until: google.protobuf.timestamp_pb2.Timestamp\n</code></pre> <p>This is an updated timestamp defining the time after which the order should be cancelled if not filled. The timestamp is in UTC.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.UpdateGridpoolOrderResponse","title":"frequenz.api.electricity_trading.v1.electricity_trading_pb2.UpdateGridpoolOrderResponse","text":"<p>             Bases: <code>Message</code></p> <p>Response from updating an existing order for a given Gridpool.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.UpdateGridpoolOrderResponse-attributes","title":"Attributes","text":""},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.UpdateGridpoolOrderResponse.gridpool_id","title":"gridpool_id  <code>instance-attribute</code>","text":"<pre><code>gridpool_id: builtins.int\n</code></pre> <p>ID of the Gridpool the order belongs to.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2/#frequenz.api.electricity_trading.v1.electricity_trading_pb2.UpdateGridpoolOrderResponse.order_detail","title":"order_detail  <code>property</code>","text":"<pre><code>order_detail: global___OrderDetail\n</code></pre> <p>Details of the updated order.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2_grpc/","title":"electricity_trading_pb2_grpc","text":""},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2_grpc/#frequenz.api.electricity_trading.v1.electricity_trading_pb2_grpc","title":"frequenz.api.electricity_trading.v1.electricity_trading_pb2_grpc","text":"<p>Client and server classes corresponding to protobuf-defined services.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2_grpc/#frequenz.api.electricity_trading.v1.electricity_trading_pb2_grpc-classes","title":"Classes","text":""},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2_grpc/#frequenz.api.electricity_trading.v1.electricity_trading_pb2_grpc.ElectricityTradingService","title":"frequenz.api.electricity_trading.v1.electricity_trading_pb2_grpc.ElectricityTradingService","text":"<p>             Bases: <code>object</code></p> <p>Service providing operations related to order management.</p> Source code in <code>py/frequenz/api/electricity_trading/v1/electricity_trading_pb2_grpc.py</code> <pre><code>class ElectricityTradingService(object):\n\"\"\"Service providing operations related to order management.\n    \"\"\"\n@staticmethod\ndef CreateGridpoolOrder(request,\ntarget,\noptions=(),\nchannel_credentials=None,\ncall_credentials=None,\ninsecure=False,\ncompression=None,\nwait_for_ready=None,\ntimeout=None,\nmetadata=None):\nreturn grpc.experimental.unary_unary(request, target, '/frequenz.api.electricity_trading.electricity_trading.v1.ElectricityTradingService/CreateGridpoolOrder',\nfrequenz_dot_api_dot_electricity__trading_dot_v1_dot_electricity__trading__pb2.CreateGridpoolOrderRequest.SerializeToString,\nfrequenz_dot_api_dot_electricity__trading_dot_v1_dot_electricity__trading__pb2.CreateGridpoolOrderResponse.FromString,\noptions, channel_credentials,\ninsecure, call_credentials, compression, wait_for_ready, timeout, metadata)\n@staticmethod\ndef UpdateGridpoolOrder(request,\ntarget,\noptions=(),\nchannel_credentials=None,\ncall_credentials=None,\ninsecure=False,\ncompression=None,\nwait_for_ready=None,\ntimeout=None,\nmetadata=None):\nreturn grpc.experimental.unary_unary(request, target, '/frequenz.api.electricity_trading.electricity_trading.v1.ElectricityTradingService/UpdateGridpoolOrder',\nfrequenz_dot_api_dot_electricity__trading_dot_v1_dot_electricity__trading__pb2.UpdateGridpoolOrderRequest.SerializeToString,\nfrequenz_dot_api_dot_electricity__trading_dot_v1_dot_electricity__trading__pb2.UpdateGridpoolOrderResponse.FromString,\noptions, channel_credentials,\ninsecure, call_credentials, compression, wait_for_ready, timeout, metadata)\n@staticmethod\ndef CancelGridpoolOrder(request,\ntarget,\noptions=(),\nchannel_credentials=None,\ncall_credentials=None,\ninsecure=False,\ncompression=None,\nwait_for_ready=None,\ntimeout=None,\nmetadata=None):\nreturn grpc.experimental.unary_unary(request, target, '/frequenz.api.electricity_trading.electricity_trading.v1.ElectricityTradingService/CancelGridpoolOrder',\nfrequenz_dot_api_dot_electricity__trading_dot_v1_dot_electricity__trading__pb2.CancelGridpoolOrderRequest.SerializeToString,\nfrequenz_dot_api_dot_electricity__trading_dot_v1_dot_electricity__trading__pb2.CancelGridpoolOrderResponse.FromString,\noptions, channel_credentials,\ninsecure, call_credentials, compression, wait_for_ready, timeout, metadata)\n@staticmethod\ndef CancelAllGridpoolOrders(request,\ntarget,\noptions=(),\nchannel_credentials=None,\ncall_credentials=None,\ninsecure=False,\ncompression=None,\nwait_for_ready=None,\ntimeout=None,\nmetadata=None):\nreturn grpc.experimental.unary_unary(request, target, '/frequenz.api.electricity_trading.electricity_trading.v1.ElectricityTradingService/CancelAllGridpoolOrders',\nfrequenz_dot_api_dot_electricity__trading_dot_v1_dot_electricity__trading__pb2.CancelAllGridpoolOrdersRequest.SerializeToString,\nfrequenz_dot_api_dot_electricity__trading_dot_v1_dot_electricity__trading__pb2.CancelAllGridpoolOrdersResponse.FromString,\noptions, channel_credentials,\ninsecure, call_credentials, compression, wait_for_ready, timeout, metadata)\n@staticmethod\ndef GetGridpoolOrder(request,\ntarget,\noptions=(),\nchannel_credentials=None,\ncall_credentials=None,\ninsecure=False,\ncompression=None,\nwait_for_ready=None,\ntimeout=None,\nmetadata=None):\nreturn grpc.experimental.unary_unary(request, target, '/frequenz.api.electricity_trading.electricity_trading.v1.ElectricityTradingService/GetGridpoolOrder',\nfrequenz_dot_api_dot_electricity__trading_dot_v1_dot_electricity__trading__pb2.GetGridpoolOrderRequest.SerializeToString,\nfrequenz_dot_api_dot_electricity__trading_dot_v1_dot_electricity__trading__pb2.GetGridpoolOrderResponse.FromString,\noptions, channel_credentials,\ninsecure, call_credentials, compression, wait_for_ready, timeout, metadata)\n@staticmethod\ndef ListGridpoolOrders(request,\ntarget,\noptions=(),\nchannel_credentials=None,\ncall_credentials=None,\ninsecure=False,\ncompression=None,\nwait_for_ready=None,\ntimeout=None,\nmetadata=None):\nreturn grpc.experimental.unary_unary(request, target, '/frequenz.api.electricity_trading.electricity_trading.v1.ElectricityTradingService/ListGridpoolOrders',\nfrequenz_dot_api_dot_electricity__trading_dot_v1_dot_electricity__trading__pb2.ListGridpoolOrdersRequest.SerializeToString,\nfrequenz_dot_api_dot_electricity__trading_dot_v1_dot_electricity__trading__pb2.ListGridpoolOrdersResponse.FromString,\noptions, channel_credentials,\ninsecure, call_credentials, compression, wait_for_ready, timeout, metadata)\n@staticmethod\ndef ReceiveGridpoolOrdersStream(request,\ntarget,\noptions=(),\nchannel_credentials=None,\ncall_credentials=None,\ninsecure=False,\ncompression=None,\nwait_for_ready=None,\ntimeout=None,\nmetadata=None):\nreturn grpc.experimental.unary_stream(request, target, '/frequenz.api.electricity_trading.electricity_trading.v1.ElectricityTradingService/ReceiveGridpoolOrdersStream',\nfrequenz_dot_api_dot_electricity__trading_dot_v1_dot_electricity__trading__pb2.ReceiveGridpoolOrdersStreamRequest.SerializeToString,\nfrequenz_dot_api_dot_electricity__trading_dot_v1_dot_electricity__trading__pb2.ReceiveGridpoolOrdersStreamResponse.FromString,\noptions, channel_credentials,\ninsecure, call_credentials, compression, wait_for_ready, timeout, metadata)\n@staticmethod\ndef ListPublicOrders(request,\ntarget,\noptions=(),\nchannel_credentials=None,\ncall_credentials=None,\ninsecure=False,\ncompression=None,\nwait_for_ready=None,\ntimeout=None,\nmetadata=None):\nreturn grpc.experimental.unary_unary(request, target, '/frequenz.api.electricity_trading.electricity_trading.v1.ElectricityTradingService/ListPublicOrders',\nfrequenz_dot_api_dot_electricity__trading_dot_v1_dot_electricity__trading__pb2.ListPublicOrdersRequest.SerializeToString,\nfrequenz_dot_api_dot_electricity__trading_dot_v1_dot_electricity__trading__pb2.ListPublicOrdersResponse.FromString,\noptions, channel_credentials,\ninsecure, call_credentials, compression, wait_for_ready, timeout, metadata)\n@staticmethod\ndef ReceivePublicOrdersStream(request,\ntarget,\noptions=(),\nchannel_credentials=None,\ncall_credentials=None,\ninsecure=False,\ncompression=None,\nwait_for_ready=None,\ntimeout=None,\nmetadata=None):\nreturn grpc.experimental.unary_stream(request, target, '/frequenz.api.electricity_trading.electricity_trading.v1.ElectricityTradingService/ReceivePublicOrdersStream',\nfrequenz_dot_api_dot_electricity__trading_dot_v1_dot_electricity__trading__pb2.ReceivePublicOrdersStreamRequest.SerializeToString,\nfrequenz_dot_api_dot_electricity__trading_dot_v1_dot_electricity__trading__pb2.ReceivePublicOrdersStreamResponse.FromString,\noptions, channel_credentials,\ninsecure, call_credentials, compression, wait_for_ready, timeout, metadata)\n</code></pre>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2_grpc/#frequenz.api.electricity_trading.v1.electricity_trading_pb2_grpc.ElectricityTradingServiceAsyncStub","title":"frequenz.api.electricity_trading.v1.electricity_trading_pb2_grpc.ElectricityTradingServiceAsyncStub","text":"<p>Service providing operations related to order management.</p> Source code in <code>py/frequenz/api/electricity_trading/v1/electricity_trading_pb2_grpc.py</code> <pre><code>    context.set_code(grpc.StatusCode.UNIMPLEMENTED)\ncontext.set_details('Method not implemented!')\nraise NotImplementedError('Method not implemented!')\ndef CancelGridpoolOrder(self, request, context):\n\"\"\"Cancels an existing order for a given Gridpool.\n    \"\"\"\ncontext.set_code(grpc.StatusCode.UNIMPLEMENTED)\ncontext.set_details('Method not implemented!')\nraise NotImplementedError('Method not implemented!')\ndef CancelAllGridpoolOrders(self, request, context):\n\"\"\"Cancels all open orders for a given Gridpool.\n    \"\"\"\ncontext.set_code(grpc.StatusCode.UNIMPLEMENTED)\ncontext.set_details('Method not implemented!')\nraise NotImplementedError('Method not implemented!')\ndef GetGridpoolOrder(self, request, context):\n\"\"\"Fetches the details of a specific order for a given Gridpool.\n    \"\"\"\ncontext.set_code(grpc.StatusCode.UNIMPLEMENTED)\ncontext.set_details('Method not implemented!')\nraise NotImplementedError('Method not implemented!')\ndef ListGridpoolOrders(self, request, context):\n\"\"\"Lists all the orders for a given Gridpool.\n    \"\"\"\ncontext.set_code(grpc.StatusCode.UNIMPLEMENTED)\ncontext.set_details('Method not implemented!')\nraise NotImplementedError('Method not implemented!')\ndef ReceiveGridpoolOrdersStream(self, request, context):\n\"\"\"Stream order updates for a given Gridpool.\n    \"\"\"\ncontext.set_code(grpc.StatusCode.UNIMPLEMENTED)\ncontext.set_details('Method not implemented!')\nraise NotImplementedError('Method not implemented!')\ndef ListPublicOrders(self, request, context):\n\"\"\"Lists all public executed historic orders (trades).\n    \"\"\"\ncontext.set_code(grpc.StatusCode.UNIMPLEMENTED)\ncontext.set_details('Method not implemented!')\nraise NotImplementedError('Method not implemented!')\ndef ReceivePublicOrdersStream(self, request, context):\n\"\"\"Stream all executed public orders (trades).\n</code></pre>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2_grpc/#frequenz.api.electricity_trading.v1.electricity_trading_pb2_grpc.ElectricityTradingServiceAsyncStub-attributes","title":"Attributes","text":""},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2_grpc/#frequenz.api.electricity_trading.v1.electricity_trading_pb2_grpc.ElectricityTradingServiceAsyncStub.CancelAllGridpoolOrders","title":"CancelAllGridpoolOrders  <code>instance-attribute</code>","text":"<pre><code>CancelAllGridpoolOrders: grpc.aio.UnaryUnaryMultiCallable[\nfrequenz.api.electricity_trading.v1.electricity_trading_pb2.CancelAllGridpoolOrdersRequest,\nfrequenz.api.electricity_trading.v1.electricity_trading_pb2.CancelAllGridpoolOrdersResponse,\n]\n</code></pre> <p>Cancels all open orders for a given Gridpool.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2_grpc/#frequenz.api.electricity_trading.v1.electricity_trading_pb2_grpc.ElectricityTradingServiceAsyncStub.CancelGridpoolOrder","title":"CancelGridpoolOrder  <code>instance-attribute</code>","text":"<pre><code>CancelGridpoolOrder: grpc.aio.UnaryUnaryMultiCallable[\nfrequenz.api.electricity_trading.v1.electricity_trading_pb2.CancelGridpoolOrderRequest,\nfrequenz.api.electricity_trading.v1.electricity_trading_pb2.CancelGridpoolOrderResponse,\n]\n</code></pre> <p>Cancels an existing order for a given Gridpool.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2_grpc/#frequenz.api.electricity_trading.v1.electricity_trading_pb2_grpc.ElectricityTradingServiceAsyncStub.CreateGridpoolOrder","title":"CreateGridpoolOrder  <code>instance-attribute</code>","text":"<pre><code>CreateGridpoolOrder: grpc.aio.UnaryUnaryMultiCallable[\nfrequenz.api.electricity_trading.v1.electricity_trading_pb2.CreateGridpoolOrderRequest,\nfrequenz.api.electricity_trading.v1.electricity_trading_pb2.CreateGridpoolOrderResponse,\n]\n</code></pre> <p>Creates a new order for a given Gridpool.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2_grpc/#frequenz.api.electricity_trading.v1.electricity_trading_pb2_grpc.ElectricityTradingServiceAsyncStub.GetGridpoolOrder","title":"GetGridpoolOrder  <code>instance-attribute</code>","text":"<pre><code>GetGridpoolOrder: grpc.aio.UnaryUnaryMultiCallable[\nfrequenz.api.electricity_trading.v1.electricity_trading_pb2.GetGridpoolOrderRequest,\nfrequenz.api.electricity_trading.v1.electricity_trading_pb2.GetGridpoolOrderResponse,\n]\n</code></pre> <p>Fetches the details of a specific order for a given Gridpool.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2_grpc/#frequenz.api.electricity_trading.v1.electricity_trading_pb2_grpc.ElectricityTradingServiceAsyncStub.ListGridpoolOrders","title":"ListGridpoolOrders  <code>instance-attribute</code>","text":"<pre><code>ListGridpoolOrders: grpc.aio.UnaryUnaryMultiCallable[\nfrequenz.api.electricity_trading.v1.electricity_trading_pb2.ListGridpoolOrdersRequest,\nfrequenz.api.electricity_trading.v1.electricity_trading_pb2.ListGridpoolOrdersResponse,\n]\n</code></pre> <p>Lists all the orders for a given Gridpool.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2_grpc/#frequenz.api.electricity_trading.v1.electricity_trading_pb2_grpc.ElectricityTradingServiceAsyncStub.ListPublicOrders","title":"ListPublicOrders  <code>instance-attribute</code>","text":"<pre><code>ListPublicOrders: grpc.aio.UnaryUnaryMultiCallable[\nfrequenz.api.electricity_trading.v1.electricity_trading_pb2.ListPublicOrdersRequest,\nfrequenz.api.electricity_trading.v1.electricity_trading_pb2.ListPublicOrdersResponse,\n]\n</code></pre> <p>Lists all public executed historic orders (trades).</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2_grpc/#frequenz.api.electricity_trading.v1.electricity_trading_pb2_grpc.ElectricityTradingServiceAsyncStub.ReceiveGridpoolOrdersStream","title":"ReceiveGridpoolOrdersStream  <code>instance-attribute</code>","text":"<pre><code>ReceiveGridpoolOrdersStream: grpc.aio.UnaryStreamMultiCallable[\nfrequenz.api.electricity_trading.v1.electricity_trading_pb2.ReceiveGridpoolOrdersStreamRequest,\nfrequenz.api.electricity_trading.v1.electricity_trading_pb2.ReceiveGridpoolOrdersStreamResponse,\n]\n</code></pre> <p>Stream order updates for a given Gridpool.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2_grpc/#frequenz.api.electricity_trading.v1.electricity_trading_pb2_grpc.ElectricityTradingServiceAsyncStub.ReceivePublicOrdersStream","title":"ReceivePublicOrdersStream  <code>instance-attribute</code>","text":"<pre><code>ReceivePublicOrdersStream: grpc.aio.UnaryStreamMultiCallable[\nfrequenz.api.electricity_trading.v1.electricity_trading_pb2.ReceivePublicOrdersStreamRequest,\nfrequenz.api.electricity_trading.v1.electricity_trading_pb2.ReceivePublicOrdersStreamResponse,\n]\n</code></pre> <p>Stream all executed public orders (trades).</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2_grpc/#frequenz.api.electricity_trading.v1.electricity_trading_pb2_grpc.ElectricityTradingServiceAsyncStub.UpdateGridpoolOrder","title":"UpdateGridpoolOrder  <code>instance-attribute</code>","text":"<pre><code>UpdateGridpoolOrder: grpc.aio.UnaryUnaryMultiCallable[\nfrequenz.api.electricity_trading.v1.electricity_trading_pb2.UpdateGridpoolOrderRequest,\nfrequenz.api.electricity_trading.v1.electricity_trading_pb2.UpdateGridpoolOrderResponse,\n]\n</code></pre> <p>Updates an existing order for a given Gridpool.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2_grpc/#frequenz.api.electricity_trading.v1.electricity_trading_pb2_grpc.ElectricityTradingServiceServicer","title":"frequenz.api.electricity_trading.v1.electricity_trading_pb2_grpc.ElectricityTradingServiceServicer","text":"<p>             Bases: <code>object</code></p> <p>Service providing operations related to order management.</p> Source code in <code>py/frequenz/api/electricity_trading/v1/electricity_trading_pb2_grpc.py</code> <pre><code>class ElectricityTradingServiceServicer(object):\n\"\"\"Service providing operations related to order management.\n    \"\"\"\ndef CreateGridpoolOrder(self, request, context):\n\"\"\"Creates a new order for a given Gridpool.\n        \"\"\"\ncontext.set_code(grpc.StatusCode.UNIMPLEMENTED)\ncontext.set_details('Method not implemented!')\nraise NotImplementedError('Method not implemented!')\ndef UpdateGridpoolOrder(self, request, context):\n\"\"\"Updates an existing order for a given Gridpool.\n        \"\"\"\ncontext.set_code(grpc.StatusCode.UNIMPLEMENTED)\ncontext.set_details('Method not implemented!')\nraise NotImplementedError('Method not implemented!')\ndef CancelGridpoolOrder(self, request, context):\n\"\"\"Cancels an existing order for a given Gridpool.\n        \"\"\"\ncontext.set_code(grpc.StatusCode.UNIMPLEMENTED)\ncontext.set_details('Method not implemented!')\nraise NotImplementedError('Method not implemented!')\ndef CancelAllGridpoolOrders(self, request, context):\n\"\"\"Cancels all open orders for a given Gridpool.\n        \"\"\"\ncontext.set_code(grpc.StatusCode.UNIMPLEMENTED)\ncontext.set_details('Method not implemented!')\nraise NotImplementedError('Method not implemented!')\ndef GetGridpoolOrder(self, request, context):\n\"\"\"Fetches the details of a specific order for a given Gridpool.\n        \"\"\"\ncontext.set_code(grpc.StatusCode.UNIMPLEMENTED)\ncontext.set_details('Method not implemented!')\nraise NotImplementedError('Method not implemented!')\ndef ListGridpoolOrders(self, request, context):\n\"\"\"Lists all the orders for a given Gridpool.\n        \"\"\"\ncontext.set_code(grpc.StatusCode.UNIMPLEMENTED)\ncontext.set_details('Method not implemented!')\nraise NotImplementedError('Method not implemented!')\ndef ReceiveGridpoolOrdersStream(self, request, context):\n\"\"\"Stream order updates for a given Gridpool.\n        \"\"\"\ncontext.set_code(grpc.StatusCode.UNIMPLEMENTED)\ncontext.set_details('Method not implemented!')\nraise NotImplementedError('Method not implemented!')\ndef ListPublicOrders(self, request, context):\n\"\"\"Lists all public executed historic orders (trades).\n        \"\"\"\ncontext.set_code(grpc.StatusCode.UNIMPLEMENTED)\ncontext.set_details('Method not implemented!')\nraise NotImplementedError('Method not implemented!')\ndef ReceivePublicOrdersStream(self, request, context):\n\"\"\"Stream all executed public orders (trades).\n        \"\"\"\ncontext.set_code(grpc.StatusCode.UNIMPLEMENTED)\ncontext.set_details('Method not implemented!')\nraise NotImplementedError('Method not implemented!')\n</code></pre>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2_grpc/#frequenz.api.electricity_trading.v1.electricity_trading_pb2_grpc.ElectricityTradingServiceServicer-functions","title":"Functions","text":""},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2_grpc/#frequenz.api.electricity_trading.v1.electricity_trading_pb2_grpc.ElectricityTradingServiceServicer.CancelAllGridpoolOrders","title":"CancelAllGridpoolOrders","text":"<pre><code>CancelAllGridpoolOrders(\nrequest: frequenz.api.electricity_trading.v1.electricity_trading_pb2.CancelAllGridpoolOrdersRequest,\ncontext: _ServicerContext,\n) -&gt; typing.Union[\nfrequenz.api.electricity_trading.v1.electricity_trading_pb2.CancelAllGridpoolOrdersResponse,\ncollections.abc.Awaitable[\nfrequenz.api.electricity_trading.v1.electricity_trading_pb2.CancelAllGridpoolOrdersResponse\n],\n]\n</code></pre> <p>Cancels all open orders for a given Gridpool.</p> Source code in <code>py/frequenz/api/electricity_trading/v1/electricity_trading_pb2_grpc.py</code> <pre><code>def CancelAllGridpoolOrders(self, request, context):\n\"\"\"Cancels all open orders for a given Gridpool.\n    \"\"\"\ncontext.set_code(grpc.StatusCode.UNIMPLEMENTED)\ncontext.set_details('Method not implemented!')\nraise NotImplementedError('Method not implemented!')\n</code></pre>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2_grpc/#frequenz.api.electricity_trading.v1.electricity_trading_pb2_grpc.ElectricityTradingServiceServicer.CancelGridpoolOrder","title":"CancelGridpoolOrder","text":"<pre><code>CancelGridpoolOrder(\nrequest: frequenz.api.electricity_trading.v1.electricity_trading_pb2.CancelGridpoolOrderRequest,\ncontext: _ServicerContext,\n) -&gt; typing.Union[\nfrequenz.api.electricity_trading.v1.electricity_trading_pb2.CancelGridpoolOrderResponse,\ncollections.abc.Awaitable[\nfrequenz.api.electricity_trading.v1.electricity_trading_pb2.CancelGridpoolOrderResponse\n],\n]\n</code></pre> <p>Cancels an existing order for a given Gridpool.</p> Source code in <code>py/frequenz/api/electricity_trading/v1/electricity_trading_pb2_grpc.py</code> <pre><code>def CancelGridpoolOrder(self, request, context):\n\"\"\"Cancels an existing order for a given Gridpool.\n    \"\"\"\ncontext.set_code(grpc.StatusCode.UNIMPLEMENTED)\ncontext.set_details('Method not implemented!')\nraise NotImplementedError('Method not implemented!')\n</code></pre>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2_grpc/#frequenz.api.electricity_trading.v1.electricity_trading_pb2_grpc.ElectricityTradingServiceServicer.CreateGridpoolOrder","title":"CreateGridpoolOrder","text":"<pre><code>CreateGridpoolOrder(\nrequest: frequenz.api.electricity_trading.v1.electricity_trading_pb2.CreateGridpoolOrderRequest,\ncontext: _ServicerContext,\n) -&gt; typing.Union[\nfrequenz.api.electricity_trading.v1.electricity_trading_pb2.CreateGridpoolOrderResponse,\ncollections.abc.Awaitable[\nfrequenz.api.electricity_trading.v1.electricity_trading_pb2.CreateGridpoolOrderResponse\n],\n]\n</code></pre> <p>Creates a new order for a given Gridpool.</p> Source code in <code>py/frequenz/api/electricity_trading/v1/electricity_trading_pb2_grpc.py</code> <pre><code>def CreateGridpoolOrder(self, request, context):\n\"\"\"Creates a new order for a given Gridpool.\n    \"\"\"\ncontext.set_code(grpc.StatusCode.UNIMPLEMENTED)\ncontext.set_details('Method not implemented!')\nraise NotImplementedError('Method not implemented!')\n</code></pre>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2_grpc/#frequenz.api.electricity_trading.v1.electricity_trading_pb2_grpc.ElectricityTradingServiceServicer.GetGridpoolOrder","title":"GetGridpoolOrder","text":"<pre><code>GetGridpoolOrder(\nrequest: frequenz.api.electricity_trading.v1.electricity_trading_pb2.GetGridpoolOrderRequest,\ncontext: _ServicerContext,\n) -&gt; typing.Union[\nfrequenz.api.electricity_trading.v1.electricity_trading_pb2.GetGridpoolOrderResponse,\ncollections.abc.Awaitable[\nfrequenz.api.electricity_trading.v1.electricity_trading_pb2.GetGridpoolOrderResponse\n],\n]\n</code></pre> <p>Fetches the details of a specific order for a given Gridpool.</p> Source code in <code>py/frequenz/api/electricity_trading/v1/electricity_trading_pb2_grpc.py</code> <pre><code>def GetGridpoolOrder(self, request, context):\n\"\"\"Fetches the details of a specific order for a given Gridpool.\n    \"\"\"\ncontext.set_code(grpc.StatusCode.UNIMPLEMENTED)\ncontext.set_details('Method not implemented!')\nraise NotImplementedError('Method not implemented!')\n</code></pre>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2_grpc/#frequenz.api.electricity_trading.v1.electricity_trading_pb2_grpc.ElectricityTradingServiceServicer.ListGridpoolOrders","title":"ListGridpoolOrders","text":"<pre><code>ListGridpoolOrders(\nrequest: frequenz.api.electricity_trading.v1.electricity_trading_pb2.ListGridpoolOrdersRequest,\ncontext: _ServicerContext,\n) -&gt; typing.Union[\nfrequenz.api.electricity_trading.v1.electricity_trading_pb2.ListGridpoolOrdersResponse,\ncollections.abc.Awaitable[\nfrequenz.api.electricity_trading.v1.electricity_trading_pb2.ListGridpoolOrdersResponse\n],\n]\n</code></pre> <p>Lists all the orders for a given Gridpool.</p> Source code in <code>py/frequenz/api/electricity_trading/v1/electricity_trading_pb2_grpc.py</code> <pre><code>def ListGridpoolOrders(self, request, context):\n\"\"\"Lists all the orders for a given Gridpool.\n    \"\"\"\ncontext.set_code(grpc.StatusCode.UNIMPLEMENTED)\ncontext.set_details('Method not implemented!')\nraise NotImplementedError('Method not implemented!')\n</code></pre>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2_grpc/#frequenz.api.electricity_trading.v1.electricity_trading_pb2_grpc.ElectricityTradingServiceServicer.ListPublicOrders","title":"ListPublicOrders","text":"<pre><code>ListPublicOrders(\nrequest: frequenz.api.electricity_trading.v1.electricity_trading_pb2.ListPublicOrdersRequest,\ncontext: _ServicerContext,\n) -&gt; typing.Union[\nfrequenz.api.electricity_trading.v1.electricity_trading_pb2.ListPublicOrdersResponse,\ncollections.abc.Awaitable[\nfrequenz.api.electricity_trading.v1.electricity_trading_pb2.ListPublicOrdersResponse\n],\n]\n</code></pre> <p>Lists all public executed historic orders (trades).</p> Source code in <code>py/frequenz/api/electricity_trading/v1/electricity_trading_pb2_grpc.py</code> <pre><code>def ListPublicOrders(self, request, context):\n\"\"\"Lists all public executed historic orders (trades).\n    \"\"\"\ncontext.set_code(grpc.StatusCode.UNIMPLEMENTED)\ncontext.set_details('Method not implemented!')\nraise NotImplementedError('Method not implemented!')\n</code></pre>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2_grpc/#frequenz.api.electricity_trading.v1.electricity_trading_pb2_grpc.ElectricityTradingServiceServicer.ReceiveGridpoolOrdersStream","title":"ReceiveGridpoolOrdersStream","text":"<pre><code>ReceiveGridpoolOrdersStream(\nrequest: frequenz.api.electricity_trading.v1.electricity_trading_pb2.ReceiveGridpoolOrdersStreamRequest,\ncontext: _ServicerContext,\n) -&gt; typing.Union[\ncollections.abc.Iterator[\nfrequenz.api.electricity_trading.v1.electricity_trading_pb2.ReceiveGridpoolOrdersStreamResponse\n],\ncollections.abc.AsyncIterator[\nfrequenz.api.electricity_trading.v1.electricity_trading_pb2.ReceiveGridpoolOrdersStreamResponse\n],\n]\n</code></pre> <p>Stream order updates for a given Gridpool.</p> Source code in <code>py/frequenz/api/electricity_trading/v1/electricity_trading_pb2_grpc.py</code> <pre><code>def ReceiveGridpoolOrdersStream(self, request, context):\n\"\"\"Stream order updates for a given Gridpool.\n    \"\"\"\ncontext.set_code(grpc.StatusCode.UNIMPLEMENTED)\ncontext.set_details('Method not implemented!')\nraise NotImplementedError('Method not implemented!')\n</code></pre>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2_grpc/#frequenz.api.electricity_trading.v1.electricity_trading_pb2_grpc.ElectricityTradingServiceServicer.ReceivePublicOrdersStream","title":"ReceivePublicOrdersStream","text":"<pre><code>ReceivePublicOrdersStream(\nrequest: frequenz.api.electricity_trading.v1.electricity_trading_pb2.ReceivePublicOrdersStreamRequest,\ncontext: _ServicerContext,\n) -&gt; typing.Union[\ncollections.abc.Iterator[\nfrequenz.api.electricity_trading.v1.electricity_trading_pb2.ReceivePublicOrdersStreamResponse\n],\ncollections.abc.AsyncIterator[\nfrequenz.api.electricity_trading.v1.electricity_trading_pb2.ReceivePublicOrdersStreamResponse\n],\n]\n</code></pre> <p>Stream all executed public orders (trades).</p> Source code in <code>py/frequenz/api/electricity_trading/v1/electricity_trading_pb2_grpc.py</code> <pre><code>def ReceivePublicOrdersStream(self, request, context):\n\"\"\"Stream all executed public orders (trades).\n    \"\"\"\ncontext.set_code(grpc.StatusCode.UNIMPLEMENTED)\ncontext.set_details('Method not implemented!')\nraise NotImplementedError('Method not implemented!')\n</code></pre>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2_grpc/#frequenz.api.electricity_trading.v1.electricity_trading_pb2_grpc.ElectricityTradingServiceServicer.UpdateGridpoolOrder","title":"UpdateGridpoolOrder","text":"<pre><code>UpdateGridpoolOrder(\nrequest: frequenz.api.electricity_trading.v1.electricity_trading_pb2.UpdateGridpoolOrderRequest,\ncontext: _ServicerContext,\n) -&gt; typing.Union[\nfrequenz.api.electricity_trading.v1.electricity_trading_pb2.UpdateGridpoolOrderResponse,\ncollections.abc.Awaitable[\nfrequenz.api.electricity_trading.v1.electricity_trading_pb2.UpdateGridpoolOrderResponse\n],\n]\n</code></pre> <p>Updates an existing order for a given Gridpool.</p> Source code in <code>py/frequenz/api/electricity_trading/v1/electricity_trading_pb2_grpc.py</code> <pre><code>def UpdateGridpoolOrder(self, request, context):\n\"\"\"Updates an existing order for a given Gridpool.\n    \"\"\"\ncontext.set_code(grpc.StatusCode.UNIMPLEMENTED)\ncontext.set_details('Method not implemented!')\nraise NotImplementedError('Method not implemented!')\n</code></pre>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2_grpc/#frequenz.api.electricity_trading.v1.electricity_trading_pb2_grpc.ElectricityTradingServiceStub","title":"frequenz.api.electricity_trading.v1.electricity_trading_pb2_grpc.ElectricityTradingServiceStub","text":"<p>             Bases: <code>object</code></p> <p>Service providing operations related to order management.</p> Source code in <code>py/frequenz/api/electricity_trading/v1/electricity_trading_pb2_grpc.py</code> <pre><code>class ElectricityTradingServiceStub(object):\n\"\"\"Service providing operations related to order management.\n    \"\"\"\ndef __init__(self, channel):\n\"\"\"Constructor.\n        Args:\n            channel: A grpc.Channel.\n        \"\"\"\nself.CreateGridpoolOrder = channel.unary_unary(\n'/frequenz.api.electricity_trading.electricity_trading.v1.ElectricityTradingService/CreateGridpoolOrder',\nrequest_serializer=frequenz_dot_api_dot_electricity__trading_dot_v1_dot_electricity__trading__pb2.CreateGridpoolOrderRequest.SerializeToString,\nresponse_deserializer=frequenz_dot_api_dot_electricity__trading_dot_v1_dot_electricity__trading__pb2.CreateGridpoolOrderResponse.FromString,\n)\nself.UpdateGridpoolOrder = channel.unary_unary(\n'/frequenz.api.electricity_trading.electricity_trading.v1.ElectricityTradingService/UpdateGridpoolOrder',\nrequest_serializer=frequenz_dot_api_dot_electricity__trading_dot_v1_dot_electricity__trading__pb2.UpdateGridpoolOrderRequest.SerializeToString,\nresponse_deserializer=frequenz_dot_api_dot_electricity__trading_dot_v1_dot_electricity__trading__pb2.UpdateGridpoolOrderResponse.FromString,\n)\nself.CancelGridpoolOrder = channel.unary_unary(\n'/frequenz.api.electricity_trading.electricity_trading.v1.ElectricityTradingService/CancelGridpoolOrder',\nrequest_serializer=frequenz_dot_api_dot_electricity__trading_dot_v1_dot_electricity__trading__pb2.CancelGridpoolOrderRequest.SerializeToString,\nresponse_deserializer=frequenz_dot_api_dot_electricity__trading_dot_v1_dot_electricity__trading__pb2.CancelGridpoolOrderResponse.FromString,\n)\nself.CancelAllGridpoolOrders = channel.unary_unary(\n'/frequenz.api.electricity_trading.electricity_trading.v1.ElectricityTradingService/CancelAllGridpoolOrders',\nrequest_serializer=frequenz_dot_api_dot_electricity__trading_dot_v1_dot_electricity__trading__pb2.CancelAllGridpoolOrdersRequest.SerializeToString,\nresponse_deserializer=frequenz_dot_api_dot_electricity__trading_dot_v1_dot_electricity__trading__pb2.CancelAllGridpoolOrdersResponse.FromString,\n)\nself.GetGridpoolOrder = channel.unary_unary(\n'/frequenz.api.electricity_trading.electricity_trading.v1.ElectricityTradingService/GetGridpoolOrder',\nrequest_serializer=frequenz_dot_api_dot_electricity__trading_dot_v1_dot_electricity__trading__pb2.GetGridpoolOrderRequest.SerializeToString,\nresponse_deserializer=frequenz_dot_api_dot_electricity__trading_dot_v1_dot_electricity__trading__pb2.GetGridpoolOrderResponse.FromString,\n)\nself.ListGridpoolOrders = channel.unary_unary(\n'/frequenz.api.electricity_trading.electricity_trading.v1.ElectricityTradingService/ListGridpoolOrders',\nrequest_serializer=frequenz_dot_api_dot_electricity__trading_dot_v1_dot_electricity__trading__pb2.ListGridpoolOrdersRequest.SerializeToString,\nresponse_deserializer=frequenz_dot_api_dot_electricity__trading_dot_v1_dot_electricity__trading__pb2.ListGridpoolOrdersResponse.FromString,\n)\nself.ReceiveGridpoolOrdersStream = channel.unary_stream(\n'/frequenz.api.electricity_trading.electricity_trading.v1.ElectricityTradingService/ReceiveGridpoolOrdersStream',\nrequest_serializer=frequenz_dot_api_dot_electricity__trading_dot_v1_dot_electricity__trading__pb2.ReceiveGridpoolOrdersStreamRequest.SerializeToString,\nresponse_deserializer=frequenz_dot_api_dot_electricity__trading_dot_v1_dot_electricity__trading__pb2.ReceiveGridpoolOrdersStreamResponse.FromString,\n)\nself.ListPublicOrders = channel.unary_unary(\n'/frequenz.api.electricity_trading.electricity_trading.v1.ElectricityTradingService/ListPublicOrders',\nrequest_serializer=frequenz_dot_api_dot_electricity__trading_dot_v1_dot_electricity__trading__pb2.ListPublicOrdersRequest.SerializeToString,\nresponse_deserializer=frequenz_dot_api_dot_electricity__trading_dot_v1_dot_electricity__trading__pb2.ListPublicOrdersResponse.FromString,\n)\nself.ReceivePublicOrdersStream = channel.unary_stream(\n'/frequenz.api.electricity_trading.electricity_trading.v1.ElectricityTradingService/ReceivePublicOrdersStream',\nrequest_serializer=frequenz_dot_api_dot_electricity__trading_dot_v1_dot_electricity__trading__pb2.ReceivePublicOrdersStreamRequest.SerializeToString,\nresponse_deserializer=frequenz_dot_api_dot_electricity__trading_dot_v1_dot_electricity__trading__pb2.ReceivePublicOrdersStreamResponse.FromString,\n)\n</code></pre>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2_grpc/#frequenz.api.electricity_trading.v1.electricity_trading_pb2_grpc.ElectricityTradingServiceStub-attributes","title":"Attributes","text":""},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2_grpc/#frequenz.api.electricity_trading.v1.electricity_trading_pb2_grpc.ElectricityTradingServiceStub.CancelAllGridpoolOrders","title":"CancelAllGridpoolOrders  <code>instance-attribute</code>","text":"<pre><code>CancelAllGridpoolOrders: grpc.UnaryUnaryMultiCallable[\nfrequenz.api.electricity_trading.v1.electricity_trading_pb2.CancelAllGridpoolOrdersRequest,\nfrequenz.api.electricity_trading.v1.electricity_trading_pb2.CancelAllGridpoolOrdersResponse,\n] = channel.unary_unary(\n\"/frequenz.api.electricity_trading.electricity_trading.v1.ElectricityTradingService/CancelAllGridpoolOrders\",\nrequest_serializer=frequenz_dot_api_dot_electricity__trading_dot_v1_dot_electricity__trading__pb2.CancelAllGridpoolOrdersRequest.SerializeToString,\nresponse_deserializer=frequenz_dot_api_dot_electricity__trading_dot_v1_dot_electricity__trading__pb2.CancelAllGridpoolOrdersResponse.FromString,\n)\n</code></pre> <p>Cancels all open orders for a given Gridpool.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2_grpc/#frequenz.api.electricity_trading.v1.electricity_trading_pb2_grpc.ElectricityTradingServiceStub.CancelGridpoolOrder","title":"CancelGridpoolOrder  <code>instance-attribute</code>","text":"<pre><code>CancelGridpoolOrder: grpc.UnaryUnaryMultiCallable[\nfrequenz.api.electricity_trading.v1.electricity_trading_pb2.CancelGridpoolOrderRequest,\nfrequenz.api.electricity_trading.v1.electricity_trading_pb2.CancelGridpoolOrderResponse,\n] = channel.unary_unary(\n\"/frequenz.api.electricity_trading.electricity_trading.v1.ElectricityTradingService/CancelGridpoolOrder\",\nrequest_serializer=frequenz_dot_api_dot_electricity__trading_dot_v1_dot_electricity__trading__pb2.CancelGridpoolOrderRequest.SerializeToString,\nresponse_deserializer=frequenz_dot_api_dot_electricity__trading_dot_v1_dot_electricity__trading__pb2.CancelGridpoolOrderResponse.FromString,\n)\n</code></pre> <p>Cancels an existing order for a given Gridpool.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2_grpc/#frequenz.api.electricity_trading.v1.electricity_trading_pb2_grpc.ElectricityTradingServiceStub.CreateGridpoolOrder","title":"CreateGridpoolOrder  <code>instance-attribute</code>","text":"<pre><code>CreateGridpoolOrder: grpc.UnaryUnaryMultiCallable[\nfrequenz.api.electricity_trading.v1.electricity_trading_pb2.CreateGridpoolOrderRequest,\nfrequenz.api.electricity_trading.v1.electricity_trading_pb2.CreateGridpoolOrderResponse,\n] = channel.unary_unary(\n\"/frequenz.api.electricity_trading.electricity_trading.v1.ElectricityTradingService/CreateGridpoolOrder\",\nrequest_serializer=frequenz_dot_api_dot_electricity__trading_dot_v1_dot_electricity__trading__pb2.CreateGridpoolOrderRequest.SerializeToString,\nresponse_deserializer=frequenz_dot_api_dot_electricity__trading_dot_v1_dot_electricity__trading__pb2.CreateGridpoolOrderResponse.FromString,\n)\n</code></pre> <p>Creates a new order for a given Gridpool.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2_grpc/#frequenz.api.electricity_trading.v1.electricity_trading_pb2_grpc.ElectricityTradingServiceStub.GetGridpoolOrder","title":"GetGridpoolOrder  <code>instance-attribute</code>","text":"<pre><code>GetGridpoolOrder: grpc.UnaryUnaryMultiCallable[\nfrequenz.api.electricity_trading.v1.electricity_trading_pb2.GetGridpoolOrderRequest,\nfrequenz.api.electricity_trading.v1.electricity_trading_pb2.GetGridpoolOrderResponse,\n] = channel.unary_unary(\n\"/frequenz.api.electricity_trading.electricity_trading.v1.ElectricityTradingService/GetGridpoolOrder\",\nrequest_serializer=frequenz_dot_api_dot_electricity__trading_dot_v1_dot_electricity__trading__pb2.GetGridpoolOrderRequest.SerializeToString,\nresponse_deserializer=frequenz_dot_api_dot_electricity__trading_dot_v1_dot_electricity__trading__pb2.GetGridpoolOrderResponse.FromString,\n)\n</code></pre> <p>Fetches the details of a specific order for a given Gridpool.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2_grpc/#frequenz.api.electricity_trading.v1.electricity_trading_pb2_grpc.ElectricityTradingServiceStub.ListGridpoolOrders","title":"ListGridpoolOrders  <code>instance-attribute</code>","text":"<pre><code>ListGridpoolOrders: grpc.UnaryUnaryMultiCallable[\nfrequenz.api.electricity_trading.v1.electricity_trading_pb2.ListGridpoolOrdersRequest,\nfrequenz.api.electricity_trading.v1.electricity_trading_pb2.ListGridpoolOrdersResponse,\n] = channel.unary_unary(\n\"/frequenz.api.electricity_trading.electricity_trading.v1.ElectricityTradingService/ListGridpoolOrders\",\nrequest_serializer=frequenz_dot_api_dot_electricity__trading_dot_v1_dot_electricity__trading__pb2.ListGridpoolOrdersRequest.SerializeToString,\nresponse_deserializer=frequenz_dot_api_dot_electricity__trading_dot_v1_dot_electricity__trading__pb2.ListGridpoolOrdersResponse.FromString,\n)\n</code></pre> <p>Lists all the orders for a given Gridpool.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2_grpc/#frequenz.api.electricity_trading.v1.electricity_trading_pb2_grpc.ElectricityTradingServiceStub.ListPublicOrders","title":"ListPublicOrders  <code>instance-attribute</code>","text":"<pre><code>ListPublicOrders: grpc.UnaryUnaryMultiCallable[\nfrequenz.api.electricity_trading.v1.electricity_trading_pb2.ListPublicOrdersRequest,\nfrequenz.api.electricity_trading.v1.electricity_trading_pb2.ListPublicOrdersResponse,\n] = channel.unary_unary(\n\"/frequenz.api.electricity_trading.electricity_trading.v1.ElectricityTradingService/ListPublicOrders\",\nrequest_serializer=frequenz_dot_api_dot_electricity__trading_dot_v1_dot_electricity__trading__pb2.ListPublicOrdersRequest.SerializeToString,\nresponse_deserializer=frequenz_dot_api_dot_electricity__trading_dot_v1_dot_electricity__trading__pb2.ListPublicOrdersResponse.FromString,\n)\n</code></pre> <p>Lists all public executed historic orders (trades).</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2_grpc/#frequenz.api.electricity_trading.v1.electricity_trading_pb2_grpc.ElectricityTradingServiceStub.ReceiveGridpoolOrdersStream","title":"ReceiveGridpoolOrdersStream  <code>instance-attribute</code>","text":"<pre><code>ReceiveGridpoolOrdersStream: grpc.UnaryStreamMultiCallable[\nfrequenz.api.electricity_trading.v1.electricity_trading_pb2.ReceiveGridpoolOrdersStreamRequest,\nfrequenz.api.electricity_trading.v1.electricity_trading_pb2.ReceiveGridpoolOrdersStreamResponse,\n] = channel.unary_stream(\n\"/frequenz.api.electricity_trading.electricity_trading.v1.ElectricityTradingService/ReceiveGridpoolOrdersStream\",\nrequest_serializer=frequenz_dot_api_dot_electricity__trading_dot_v1_dot_electricity__trading__pb2.ReceiveGridpoolOrdersStreamRequest.SerializeToString,\nresponse_deserializer=frequenz_dot_api_dot_electricity__trading_dot_v1_dot_electricity__trading__pb2.ReceiveGridpoolOrdersStreamResponse.FromString,\n)\n</code></pre> <p>Stream order updates for a given Gridpool.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2_grpc/#frequenz.api.electricity_trading.v1.electricity_trading_pb2_grpc.ElectricityTradingServiceStub.ReceivePublicOrdersStream","title":"ReceivePublicOrdersStream  <code>instance-attribute</code>","text":"<pre><code>ReceivePublicOrdersStream: grpc.UnaryStreamMultiCallable[\nfrequenz.api.electricity_trading.v1.electricity_trading_pb2.ReceivePublicOrdersStreamRequest,\nfrequenz.api.electricity_trading.v1.electricity_trading_pb2.ReceivePublicOrdersStreamResponse,\n] = channel.unary_stream(\n\"/frequenz.api.electricity_trading.electricity_trading.v1.ElectricityTradingService/ReceivePublicOrdersStream\",\nrequest_serializer=frequenz_dot_api_dot_electricity__trading_dot_v1_dot_electricity__trading__pb2.ReceivePublicOrdersStreamRequest.SerializeToString,\nresponse_deserializer=frequenz_dot_api_dot_electricity__trading_dot_v1_dot_electricity__trading__pb2.ReceivePublicOrdersStreamResponse.FromString,\n)\n</code></pre> <p>Stream all executed public orders (trades).</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2_grpc/#frequenz.api.electricity_trading.v1.electricity_trading_pb2_grpc.ElectricityTradingServiceStub.UpdateGridpoolOrder","title":"UpdateGridpoolOrder  <code>instance-attribute</code>","text":"<pre><code>UpdateGridpoolOrder: grpc.UnaryUnaryMultiCallable[\nfrequenz.api.electricity_trading.v1.electricity_trading_pb2.UpdateGridpoolOrderRequest,\nfrequenz.api.electricity_trading.v1.electricity_trading_pb2.UpdateGridpoolOrderResponse,\n] = channel.unary_unary(\n\"/frequenz.api.electricity_trading.electricity_trading.v1.ElectricityTradingService/UpdateGridpoolOrder\",\nrequest_serializer=frequenz_dot_api_dot_electricity__trading_dot_v1_dot_electricity__trading__pb2.UpdateGridpoolOrderRequest.SerializeToString,\nresponse_deserializer=frequenz_dot_api_dot_electricity__trading_dot_v1_dot_electricity__trading__pb2.UpdateGridpoolOrderResponse.FromString,\n)\n</code></pre> <p>Updates an existing order for a given Gridpool.</p>"},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2_grpc/#frequenz.api.electricity_trading.v1.electricity_trading_pb2_grpc.ElectricityTradingServiceStub-functions","title":"Functions","text":""},{"location":"python-reference/frequenz/api/electricity_trading/v1/electricity_trading_pb2_grpc/#frequenz.api.electricity_trading.v1.electricity_trading_pb2_grpc.ElectricityTradingServiceStub.__init__","title":"__init__","text":"<pre><code>__init__(\nchannel: typing.Union[grpc.Channel, grpc.aio.Channel]\n) -&gt; None\n</code></pre> <p>Constructor.</p> PARAMETER  DESCRIPTION <code>channel</code> <p>A grpc.Channel.</p> <p> TYPE: <code>Union[Channel, Channel]</code> </p> Source code in <code>py/frequenz/api/electricity_trading/v1/electricity_trading_pb2_grpc.py</code> <pre><code>def __init__(self, channel):\n\"\"\"Constructor.\n    Args:\n        channel: A grpc.Channel.\n    \"\"\"\nself.CreateGridpoolOrder = channel.unary_unary(\n'/frequenz.api.electricity_trading.electricity_trading.v1.ElectricityTradingService/CreateGridpoolOrder',\nrequest_serializer=frequenz_dot_api_dot_electricity__trading_dot_v1_dot_electricity__trading__pb2.CreateGridpoolOrderRequest.SerializeToString,\nresponse_deserializer=frequenz_dot_api_dot_electricity__trading_dot_v1_dot_electricity__trading__pb2.CreateGridpoolOrderResponse.FromString,\n)\nself.UpdateGridpoolOrder = channel.unary_unary(\n'/frequenz.api.electricity_trading.electricity_trading.v1.ElectricityTradingService/UpdateGridpoolOrder',\nrequest_serializer=frequenz_dot_api_dot_electricity__trading_dot_v1_dot_electricity__trading__pb2.UpdateGridpoolOrderRequest.SerializeToString,\nresponse_deserializer=frequenz_dot_api_dot_electricity__trading_dot_v1_dot_electricity__trading__pb2.UpdateGridpoolOrderResponse.FromString,\n)\nself.CancelGridpoolOrder = channel.unary_unary(\n'/frequenz.api.electricity_trading.electricity_trading.v1.ElectricityTradingService/CancelGridpoolOrder',\nrequest_serializer=frequenz_dot_api_dot_electricity__trading_dot_v1_dot_electricity__trading__pb2.CancelGridpoolOrderRequest.SerializeToString,\nresponse_deserializer=frequenz_dot_api_dot_electricity__trading_dot_v1_dot_electricity__trading__pb2.CancelGridpoolOrderResponse.FromString,\n)\nself.CancelAllGridpoolOrders = channel.unary_unary(\n'/frequenz.api.electricity_trading.electricity_trading.v1.ElectricityTradingService/CancelAllGridpoolOrders',\nrequest_serializer=frequenz_dot_api_dot_electricity__trading_dot_v1_dot_electricity__trading__pb2.CancelAllGridpoolOrdersRequest.SerializeToString,\nresponse_deserializer=frequenz_dot_api_dot_electricity__trading_dot_v1_dot_electricity__trading__pb2.CancelAllGridpoolOrdersResponse.FromString,\n)\nself.GetGridpoolOrder = channel.unary_unary(\n'/frequenz.api.electricity_trading.electricity_trading.v1.ElectricityTradingService/GetGridpoolOrder',\nrequest_serializer=frequenz_dot_api_dot_electricity__trading_dot_v1_dot_electricity__trading__pb2.GetGridpoolOrderRequest.SerializeToString,\nresponse_deserializer=frequenz_dot_api_dot_electricity__trading_dot_v1_dot_electricity__trading__pb2.GetGridpoolOrderResponse.FromString,\n)\nself.ListGridpoolOrders = channel.unary_unary(\n'/frequenz.api.electricity_trading.electricity_trading.v1.ElectricityTradingService/ListGridpoolOrders',\nrequest_serializer=frequenz_dot_api_dot_electricity__trading_dot_v1_dot_electricity__trading__pb2.ListGridpoolOrdersRequest.SerializeToString,\nresponse_deserializer=frequenz_dot_api_dot_electricity__trading_dot_v1_dot_electricity__trading__pb2.ListGridpoolOrdersResponse.FromString,\n)\nself.ReceiveGridpoolOrdersStream = channel.unary_stream(\n'/frequenz.api.electricity_trading.electricity_trading.v1.ElectricityTradingService/ReceiveGridpoolOrdersStream',\nrequest_serializer=frequenz_dot_api_dot_electricity__trading_dot_v1_dot_electricity__trading__pb2.ReceiveGridpoolOrdersStreamRequest.SerializeToString,\nresponse_deserializer=frequenz_dot_api_dot_electricity__trading_dot_v1_dot_electricity__trading__pb2.ReceiveGridpoolOrdersStreamResponse.FromString,\n)\nself.ListPublicOrders = channel.unary_unary(\n'/frequenz.api.electricity_trading.electricity_trading.v1.ElectricityTradingService/ListPublicOrders',\nrequest_serializer=frequenz_dot_api_dot_electricity__trading_dot_v1_dot_electricity__trading__pb2.ListPublicOrdersRequest.SerializeToString,\nresponse_deserializer=frequenz_dot_api_dot_electricity__trading_dot_v1_dot_electricity__trading__pb2.ListPublicOrdersResponse.FromString,\n)\nself.ReceivePublicOrdersStream = channel.unary_stream(\n'/frequenz.api.electricity_trading.electricity_trading.v1.ElectricityTradingService/ReceivePublicOrdersStream',\nrequest_serializer=frequenz_dot_api_dot_electricity__trading_dot_v1_dot_electricity__trading__pb2.ReceivePublicOrdersStreamRequest.SerializeToString,\nresponse_deserializer=frequenz_dot_api_dot_electricity__trading_dot_v1_dot_electricity__trading__pb2.ReceivePublicOrdersStreamResponse.FromString,\n)\n</code></pre>"}]}